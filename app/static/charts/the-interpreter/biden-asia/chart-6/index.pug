extend /partials/layout

block append config
  - var datapath = "static/charts/the-interpreter/biden-asia/chart-6/data"
  - var colorpath = "static/charts/templates/colors/data"
  - _.extend(page, data.getOne(datapath))
  - _.extend(page, data.getOne(colorpath))
  - toPercent = (n) => (n * 100).toFixed(2) + "%"
  - chart = page
  
block page

  - xbp = chart.axes.xBreakpoints
  - cntr = chart.axes.labelPosition == "center"
  - lx  = cntr ? xbp[1] : xbp[0]
  - rx1 = cntr ? xbp[0] : xbp[1]
  - rx2 = xbp[2]
  - rw1 = rx2-rx1
  - rw2 = 100-rx2

  .wrapper.flex
    .txt-center.flex.flex-grow.flex-col
      .titles
        .chart-title= chart.title
        //.chart-subtitle.txt-muted.p-sm!= chart.subtitle
      
      .chart.flex-grow: .chart-content
        - ln = chart.series[0].values.length
        - axes = chart.axes
        - maxL = axes.maxL
        - maxR = axes.maxR
        - fxL = (x) => (rw1/100)*Math.abs(x) / maxL
        - fxR = (x) => (rw2/100)*Math.abs(x) / maxR
        - fy = (i) => (i + 0.77) / (ln + 0.75)
        
        // Legend
        svg.legend(height="2.25em" width="100%")
        
          svg(x=("47%"))
            text(
              text-anchor="end"
              transform="translate(-25 0)"
            )= chart.series[1].title
            rect(
              y="-0.7em" x="-16px"
              width="1.1em" height=".8em"
              fill=chart.colors[chart.series[1].color]
            )
            
          svg(x="53%")
            rect(
              y="-0.7em" x="-16px"
              width="1.1em" height=".8em"
              fill=chart.colors[chart.series[2].color]
            )
            text(
              text-anchor="start"
              transform="translate(16 0)"
            )= chart.series[2].title


        svg.plot-area(height="100%" width="100%")

          // X-Axis labels
          - let steps = chart.axes.steps-1
          svg(x=rx1+"%" width=(rw1+"%"))
            line(x1="0" x2="100%" y1="18" y2="18" stroke="#666")
            line(x1="0" x2="100%" y1="100%" y2="100%" stroke="#666")
            for n, i in new Array(steps+1)
              - x = 1 - (i / (steps))
              svg(x=toPercent(x))
                if chart.axes.minorLines
                  line( 
                    y1="18" y2="100%"
                    stroke=(i ? "#5553" : "")
                    stroke-dasharray=(chart.axes.dotted && i!=0 ? 2 : "")
                  )
                line(x1="0" x2="0" y1="8" y2="18" stroke="#666")
                text(text-anchor="middle")
                  = -maxL*(i/steps).toFixed(2) + (axes.percentage ? "%" : "")

          svg(x=rx2+"%" width=rw2+"%")
            line(x1="0" x2="100%" y1="18" y2="18" stroke="#666")
            line(x1="0" x2="100%" y1="100%" y2="100%" stroke="#666")    
            for n, i in new Array(5)
              - x = i / (4)
              svg(x=toPercent(x))
                if chart.axes.minorLines
                  line( 
                    y1="18" y2="100%"
                    stroke=(i ? "#5553" : "#000")
                    stroke-dasharray=(chart.axes.dotted && (!cntr && i!=0) ? 2 : "")
                  )
                line(x1="0" x2="0" y1="8" y2="18" stroke="#666")
                text(text-anchor="middle")
                  = maxR*(i/4).toFixed(2) + (axes.percentage ? "%" : "")
                
          
          // Rects
          g.bars
            - const n = chart.series[0].values.length
            for undef, i in new Array(n)
              svg(
                y=toPercent(fy(i))
                height=toPercent(fy(0))
                width="100%"
              )
                - vals = chart.series.filter( (s, i) => i ).map( s => s.values[i] )
                - vals = axes.reverse ? vals.reverse() : vals
                
                // Category labels
                svg.category-label(x=(cntr ? 50+lx-rw2 : lx)+"%" y="50%")
                  text(
                    text-anchor="middle"
                    transform="translate(0 5.5)"
                  )
                    =chart.series[0].values[i]

                for v, j in vals
                  - ci = axes.reverse ? vals.length-j : j+1
                  - color = chart.colors[chart.series[ci].color]
                  - lhs = (axes.reverse && !(ci-1)) || (!axes.reverse && (ci-1))
                  
                  if v > 0
                    - w = fxR(v)
                    - x = rx2/100
                    - xText = lhs && v < 3 ? x - 0.01 : x + w - 0.01
                    - anchr = "end"
                    
                  else
                    - w = fxL(v)
                    - x = cntr ? lx/100 - w : rx2/100 - w
                    - xText = lhs ? x + 0.01 : x + w + 0.01
                    - anchr = "start"

                  - if (!j && i==9) { xx = x; wx = w; vx = v; cx = color }

                  rect(
                    x=toPercent(x)
                    height="100%"
                    width=toPercent(w)
                    fill=color
                    stroke=(i==6 ? chart.colors[chart.series[2].color] : "")
                    stroke-width=(i==6 ? 2 : "")
                  )
                  - dx = Math.abs(v) > chart.axes.minInnerLabel || (v>0 && lhs) ? 0 : v<0 ? -50 : 50
                  - co = Math.abs(v) < chart.axes.minInnerLabel || (v>0 && v<3 && lhs) ? color : "white"
                  text.chart-value(
                    x=toPercent(xText)
                    y="50%"
                    text-anchor=anchr
                    transform=`translate(${dx} 5)`
                    style=`color: ${co}`
                    class=(i==10 ? "mobile-hide" : "")
                  )
                    = (v>0 ? "+" : "") + v.toFixed(1) + (axes.percentage ? "%" : "")

            // Overlay 2019 hiding China rect
            svg(
              y=toPercent(fy(9))
              height=toPercent(fy(0))
              width="100%"
            )
              rect(
                x=toPercent(xx)
                height="100%"
                width=toPercent(wx)
                fill=cx
              )
              - dx = Math.abs(vx) > chart.axes.minInnerLabel || (vx>0 && lhs) ? 0 : vx<0 ? -40 : 40
              - co = Math.abs(vx) < chart.axes.minInnerLabel || (vx>0 && lhs) ? color : "white"
              text.chart-value.mobile-hide(
                x=toPercent(xText)
                y="50%"
                text-anchor=anchr
                transform=`translate(${dx} 4.5)` 
                style=`color: white`
              )
                = '+' + vx != 0 ? vx.toFixed(1) + (axes.percentage ? "%" : "") : ""

            // Datum line
            svg(x=rx2+"%" width=(rw2+"%"))
              line(x1="0" x2="0" y1="18" y2="100%" stroke="#666" stroke-width=2)


      .chart-source.txt-center.txt-muted(style=`padding-left: ${cntr ? 0 : rx1}%`)!= chart.source
        //span.chart-notes.txt-right.txt-muted!= chart.notes
    
  
block append css
  style
    :sass
  
      .wrapper
        height: 560px
        max-width: 700px

      .chart
        box-sizing: border-box
        position: relative

      .chart-content
        position: absolute
        top: 30px
        left: 50px
        right: 20px
        bottom: 50px

      .chart-title
        margin: auto
        font-size: 24px
        
      .chart-subtitle
        font-weight: 400
        margin-top: -10px
        font-size: 18px
        
      .tooltip
        position: absolute
        left: 0
        background: #fffe
        padding: .75em
        opacity: 0
        border-radius: .2em
        box-shadow: 0 0 5px 0 #0004
        transition-duration: 0.5s
        pointer-events: none
        font-size: 14px
        text-transform: lowercase
        max-width: 180px
        box-sizing: border-box

      li
        list-style: none
        margin: 0
        padding: 4px 16px 4px 24px

      .legend
        font-size: 18px
        margin-bottom: .75em
        text-transform: uppercase
        font-family: "Wide", sans-serif
        font-weight: 500
        letter-spacing: 0.04em

      text
        font-size: 14px
        fill: currentColor

      svg
        overflow: visible
        
      .chart-notes, .chart-source
        //margin-left: 2em
        font-size: 13px
        
      .chart-value
        font-size: 13px
        opacity: 1
        transition-duration: .4s
        pointer-events: none
      
      //.chart-content:hover .chart-value
        opacity: 1

      @media (max-width: 700px)

        text
          font-size: 12px
          
      @media (max-width: 450px)
        .chart-value
          font-size: 12px
        .mobile-hide
          display: none
        .chart-content
          left: 32px
          right: 14px
          bottom: 40px
        .legend
          flex-direction: column
        .chart-title
          font-size: 18px
        .chart-subtitle
          font-size: 14px
        .chart-notes,
        .chart-source
          text-align: center
          font-size: 13px
