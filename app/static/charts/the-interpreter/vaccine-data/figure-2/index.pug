extend /partials/layout

block append config
  - var datapath = "static/charts/the-interpreter/vaccine-data/figure-2/data"
  - var colorpath = "static/charts/templates/colors/data"
  - _.extend(page, data.getOne(datapath))
  - _.extend(page, data.getOne(colorpath))
  - toPercent = (n) => (n * 100).toFixed(2) + "%"
  - chart = page
  
block page
  .wrapper.flex.txt-center
    .flex.flex-grow.flex-col
      .chart-title!= chart.title
      .chart-subtitle.txt-muted.txt-tu!= chart.subtitle
      .chart.flex-grow: .chart-content
        - ln = chart.series[0].values.length
        - axes = chart.axes
        - minX = axes.minX
        - maxX = axes.maxX
        - range = maxX - minX
        - fx = (x) => (x - minX) / range
        - fy = (i) => (i + 0.7) / ln
        
        svg(height="100%" width="100%")
        
          // X-Axis labels
          svg(width="100%" y="100%")
            - let steps = chart.axes.stepsX-1
            for n, i in new Array(steps+1)
              - x = i / (steps)
              svg.x-label(x=toPercent(x))
                text(text-anchor="middle" transform="translate(0 18)")
                  = (minX + range*(i/steps)).toFixed(0) + (axes.percentage ? "%" : "")
                
          // X-Axis minor lines
          if chart.axes.minorLines
            svg(width="100%")
              for n, i in new Array(steps+1)
                - x = (i / steps)
                svg
                  line(
                    x1=toPercent(x)
                    y1="0%"
                    x2=toPercent(x)
                    y2="100%"
                    stroke="#5552"
                    stroke-dasharray=(chart.axes.dotted.includes(steps-i) ? 5 : "")
                  )

          // Chart rects
          g.bars
            - const n = chart.series[0].values.length
            for undef, i in new Array(n)
              svg(
                y=toPercent(fy(i)-fy(-0.15) )
                height=toPercent(fy(0))
                width="100%"
              )   
                - vals = chart.series.filter( (s, i) => i ).map( s => s.values[i] )
                - vals = axes.reverse ? vals.reverse() : vals
                - x0 = 0

                for v, j in vals
                  - ci = axes.reverse ? vals.length-j : j+1

                  if v > 0
                    rect(
                      x=toPercent(x0)
                      width=toPercent(fx(v))
                      height="100%"
                      fill=(i === 3 ? "#f80" : chart.colors[chart.series[ci].color])
                    )
                    text.chart-value(
                      x=toPercent(x0 + fx(v > 5 ? v/2 : v+ 1))
                      y="50%"
                      text-anchor=v > 5 ? "middle" : "start"
                      transform="translate(0 4.5)"
                      style=`color: ${(v > 5 ? "white" : "#31363B")}`
                      class=(v < 18 ? v < 10 ? "shift-sm" : "shift-md" : "" )
                    )
                      = v.toFixed(1) + (axes.percentage ? "%" : "")
                      
                  else
                    rect(
                      x=toPercent(x0 + 0.01)
                      width="105"
                      height="100%"
                      fill="#fff"
                    )
                    text(
                      x=toPercent(x0 + 0.01)
                      y="50%"
                      text-anchor="start"
                      transform="translate(1 4.5)"
                      style=`color: #31363B; font-style: italic; opacity: 0.75; font-size: 13px`
                    )
                      = "No doses delivered"
                     
                  - x0 += fx(v)
                    
                // Y-Axis labels
                svg.y-label(x="0%" y="50%")
                  text(
                    text-anchor="end"
                    transform="translate(-16, 5)"
                  )
                    =chart.series[0].values[i]

      .chart-source.txt-muted.txt-semi!= chart.notes
        .chart-notes!= chart.source
    
  
block append css
  style
    :sass
  
      .wrapper
        height: 600px

      .chart
        box-sizing: border-box
        position: relative

      .chart-content
        position: absolute
        top: 0
        left: 130px
        right: 50px
        bottom: 30px

      .chart-title
        font-size: 28px
        font-weight: 600
        
      .chart-subtitle
        font-weight: 600
        font-size: 15px
        margin-bottom: 1.5rem

      li
        list-style: none
        margin: 0
        padding: 4px 16px 4px 24px

      .legend
        font-size: 15px
        margin: 1rem 0 0

      .legend-item
        margin: 4px 8px
        padding-right: 0
        position: relative
        white-space: nowrap

      .legend-item-box
        position: absolute
        left: 0
        top: .5em
        height: 1em
        width: 1em
        background: black

      text
        font-size: 14px
        fill: currentColor

      svg
        overflow: visible
        
      .chart-notes
        margin-top: .5rem
      .chart-source
        margin-top: 1rem
        
      .chart-source,
      .chart-notes
        font-size: 15px
        
        b
          font-weight: 500
        
      .chart-value
        opacity: 0
        transition-duration: .4s
        pointer-events: none
      
      .chart-content:hover .chart-value
        opacity: 1
          
      @media (max-width: 500px)
      
        .chart-content
          left: 110px
          right: 30px
      
        text
          font-size: 13px
        .legend
          flex-wrap: wrap
        .shift-sm,
        .shift-md
          transform: translate(18px, 4.5px)
          text-anchor: start
          fill: #31363B
        .shift-md
          transform: translate(12%, 4.5px)
        .chart-title
          font-size: 22px
        .chart-subtitle
          font-size: 14px
        .chart-notes,
        .chart-source
          font-size: 13px
        .y-label text
          transform: translate(-10px, 6px)
          
      @media (max-width: 400px)
        .x-label:nth-child(even)
          display: none
          
