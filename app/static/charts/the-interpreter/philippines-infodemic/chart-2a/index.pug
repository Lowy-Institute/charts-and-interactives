extend /partials/layout

block append config
  - var datapath = "static/charts/the-interpreter/philippines-infodemic/chart-2a/data"
  - var colorpath = "static/charts/templates/colors/data"
  - _.extend(page, data.getOne(datapath))
  - _.extend(page, data.getOne(colorpath))
  - toPercent = (n) => (n * 100).toFixed(2) + "%"
  - chart = page
  - colors = []
  
block page
  .wrapper.flex
    .flex.flex-grow.flex-col
      .chart-title= chart.title
      .chart.flex-grow: .chart-content
        - ln = chart.series[0].values.length
        - axes = chart.axes
        - minY = axes.minY
        - maxY = axes.maxY
        - range = maxY - minY
        - fx = (i) => (i + 0.5) / (ln + 1)
        - fy = (y) => (y - minY) / range
        - spacing = 0.02
        
        svg(height="100%" width="100%")
          - charts = chart.series.filter((c,i) => i)

          for series, si in charts

            svg.group(
              y=toPercent(si * spacing + si / charts.length)
              height=toPercent(1 / charts.length)
            )

              svg.labels(height="100%")
                - let steps = chart.axes.stepsY-1

                for n, i in new Array(steps+1)
                  - y = 1 - (i / (steps))
                  svg(y=toPercent(y))
                    text(text-anchor="end" transform="translate(-8 4)")
                      = minY + range*(i/steps) + (axes.percentage ? "%" : "")
                  
                for n, i in new Array(steps)
                  - y = (i / steps)
                  svg
                    line(x1="0%" y1=toPercent(y) x2="100%" y2=toPercent(y) stroke="#5552")
              
              g.bars
                for score, i in chart.series[0].values
                  - v = chart.series[si + 1].values[i]
                  - color = chart.series[si + 1].color

                  svg(
                    x=toPercent(fx(i))
                    y=toPercent(fy(minY))
                    width=toPercent(fx(0))
                    height="100%"
                  )

                    g.bars
                      rect(
                        y=toPercent(fy(maxY) - fy(v))
                        width="100%"
                        height=toPercent(fy(v))
                        fill=chart.colors[color]
                      )

                      text.chart-value(
                        x="50%"
                        y=toPercent(fy(maxY) - fy(v))
                        text-anchor="middle"
                        transform=`translate(0 -10)`
                        style=`color: ${chart.colors[color]}`
                      )
                        = v.toFixed(1) + (axes.percentage ? "%" : "")

                      // X-Axis labels
                      svg.x-label(x="50%" y="100%")
                        text(
                          text-anchor=axes.rotateX ? "end" : "middle"
                          transform=axes.rotateX ? "rotate(-45) translate(-8, 14)" : "translate(0 20)"
                        )
                          =score

      .txt-center.txt-tu.x-title Fake news score
      .txt-xs.pv-sm.txt-muted
        .chart-source!= chart.source
  
block append css
  style
    :sass
    
      .wrapper
        height: 650px
        width: 600px
        margin: auto

      .chart
        box-sizing: border-box
        position: relative

      .chart-content
        position: absolute
        top: 30px
        left: 40px
        right: 20px
        bottom: 26px

      .chart-content > svg
        border-bottom: 1px solid #bbb

      .chart-title
        font-size: 24px
        font-weight: 500

      li
        list-style: none
        margin: 0
        padding: 4px 16px 4px 24px

      text
        font-size: 12px
        fill: currentColor

      .x-title
        font-size: 12px
        font-weight: 600

      svg
        overflow: visible
        
      .chart-notes,
      .chart-source
        margin-left: 2em
        font-size: 13px
        
      .chart-value
        font-size: 10px
        font-weight: 600
      
        .chart-content:hover &
          opacity: 1
