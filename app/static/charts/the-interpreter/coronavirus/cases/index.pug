extend /partials/layout

block append config
  - page.title = "COVID-19 outbreak looks far more dangerous than SARS"
  - var chart  = data.getOne("static/charts/the-interpreter/coronavirus/cases/data")
  - var part   = 100 * (chart.countries[0].cases.length - 1) / (chart.scale.length - 1)
  - var map = (s) => (c, i) => [100 * i / (chart.scale.length - 1), 100 * (1 - c / s)].join(",")

block page
  script
    != `window.chart = ${JSON.stringify(chart)};`

  #wrapper.flex.flex-col
    #chart-title
      h1.chart-title-main
        != typogr.typogrify(page.title)

      small.chart-title-small
        | Total number of virus cases since outbreak&nbsp;reported

    #countries
      .half: .fill
        svg(
          width="100%"
          height="100%"
          viewBox="0 0 100 100"
          preserveAspectRatio="none"
          style="overflow: hidden"
        )
          line.progress(x1=part x2=part y2="100")
          for country, i in chart.countries.slice(0, 2)
            polyline.country.country-cn(
              class=`scenario-${i + 1}`
              points=country.cases.map(map(100000)).join(" ")
            )

        svg(
          width="100%"
          height="100%"
        )
          g.axis-y
            line.stroke(y1="100%")

            g.ticks
              - k = 10
              for n, i in new Array(k + 1)
                - y = (100 * i / k)
                g.axis-label
                  line.stroke(x1="-6" y1=`${y}%` y2=`${y}%`)
                  text.axis-label-text(text-anchor="end" x="-10" y=`${y}%`)
                    = written.prettyNumber((k - i) * 10000)

          svg.axis-x(y="100%")
            line.stroke(x1="100%")

            g
              for n, i in chart.scale
                - x = (100 * i / (chart.scale.length - 1))
                g.axis-label
                  line.stroke(
                    y2=(i % 10 == 0 ? 6 : 4)
                    x1=`${x}%` x2=`${x}%`
                  )
                  if i % 10 == 0
                    text.axis-label-text(text-anchor="middle" y=16 x=`${x}%`)
                      = n


        span.country-label.country-cn.scenario-1(
            style=`transform: translate3d(${part}%, ${100 * (1 - (chart.countries[0].cases.slice(-1)[0]) / 100000)}%, 0px);`
          )
          span.country-label-text
            = written.prettyNumber(chart.countries[0].cases.slice(-1)[0])

            span.line-label.scenario-1.txt-cn
              | China (COVID&#8209;19)

        span.country-label.country-cn.scenario-2(
          style=`transform: translate3d(100%, ${100 * (1 - (chart.countries[1].cases.slice(-1)[0]) / 100000)}%, 0px);`
        )
          span.country-label-text
            = written.prettyNumber(chart.countries[1].cases.slice(-1)[0])

            span.line-label.scenario-2.txt-cn
              | China (SARS)

      .half: .fill
        svg(
          width="100%"
          height="100%"
          viewBox="0 0 100 100"
          preserveAspectRatio="none"
          style="overflow: hidden"
        )
          line.progress(x1=part x2=part y2="100")
          for country, i in chart.countries.slice(2)
            polyline.country.country-wo(
              class=`scenario-${i + 1}`
              points=country.cases.map(map(8000)).join(" ")
            )

        svg(
          width="100%"
          height="100%"
        )
          g.axis-y
            line.stroke(y1="100%")

            g.ticks
              - k = 8
              for n, i in new Array(k + 1)
                - y = (100 * i / k)
                g.axis-label
                  line.stroke(x1="-6" y1=`${y}%` y2=`${y}%`)
                  text.axis-label-text(text-anchor="end" x="-10" y=`${y}%`)
                    = written.prettyNumber((k - i) * 1000)

          svg.axis-x(y="100%")
            line.stroke(x1="100%")

            g
              for n, i in chart.scale
                - x = (100 * i / (chart.scale.length - 1))
                g.axis-label
                  line.stroke(
                    y2=(i % 10 == 0 ? 6 : 4)
                    x1=`${x}%` x2=`${x}%`
                  )

                  if i % 10 == 0
                    text.axis-label-text(text-anchor="middle" y=16 x=`${x}%`)
                      = n



        span.country-label.country-wo.scenario-1(
          style=`transform: translate3d(${part}%, ${100 * (1 - (chart.countries[2].cases.slice(-1)[0]) / 8000)}%, 0px);`
        )
          span.country-label-text
            = written.prettyNumber(chart.countries[2].cases.slice(-1)[0])

            span.line-label.scenario-1.txt-wo
              | Rest of the World (COVID&#8209;19)

        span.country-label.country-wo.scenario-2(
          style=`transform: translate3d(100%, ${100 * (1 - (chart.countries[3].cases.slice(-1)[0]) / 8000)}%, 0px);`
        )
          span.country-label-text
            = written.prettyNumber(chart.countries[3].cases.slice(-1)[0])

            span.line-label.scenario-2.txt-wo
              | Rest of the World (SARS)

        a#chart-logo(href="https://www.lowyinstitute.org/")
          img(src="/img/lowyinstitute-logo.png")


    #chart-footer
      .axis-y-label Days since outbreak reported
      small#chart-source.txt-muted
        | Source: WHO Coronavirus situation reports; Taiwan Center for Disease Control

block append css
  style
    include:sass _style.sass
