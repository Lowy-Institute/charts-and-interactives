extend /partials/layout

block append config
  - var datapath = "static/charts/ian/test/pie-test/data"
  - _.extend(page, data.getOne(datapath))
  - toPercent = (n) => (n * 100).toFixed(2) + "%"

block page
  .wrapper.flex.flex-col.txt-center
    - chart = page.charts[0]
    - chart.series.forEach((s) => s.total = _.sum(_.pluck(s.values, "value")))
    - total = _.sum(_.pluck(chart.series, "total"))
    - rad = (v) => v / total * Math.PI * 2 - Math.PI / 2
    - inner = 60
    - outer = 120
    - countOuter = 0
    - countInner = 0
    - laf = 0
    - fx = (t, r) => Math.cos(rad(t)) * r
    - fy = (t, r) => Math.sin(rad(t)) * r

    .chart-title= page.title
    .chart-subtitle.txt-muted.txt-sm= chart.subtitle

    svg(
      x="50%" y="50%"
      width="100%" height="100%"
      viewBox=[
        -(outer + 40),
        -(outer + 40),
        2 * (outer + 40),
        2 * (outer + 40)
        ].join(" ")
    )
      g
        for series, s in chart.series
          - x1 = fx(countInner, inner)
          - y1 = fy(countInner, inner)
          - countInner += series.total
          - x2 = fx(countInner, inner)
          - y2 = fy(countInner, inner)
          path(
            fill="none"
            stroke=chart.colors[s]
            stroke-width=60
            d=`M ${x1} ${y1} A ${inner} ${inner} 0 ${laf} 1 ${x2} ${y2}`
            dopacity=0.8
          )

          g

            for item, i in _.sortBy(series.values, "value").reverse()
              - x1 = fx(countOuter, outer)
              - y1 = fy(countOuter, outer)
              - countOuter += item.value
              - x2 = fx(countOuter, outer)
              - y2 = fy(countOuter, outer)
              path(
                fill="none"
                stroke="none"
                stroke-width=60
                d=`M ${x1} ${y1} A ${outer} ${outer} 0 ${laf} 1 ${x2} ${y2}`
                dopacity=1 - (i / series.values.length) / 2
                sopacity=i % 2 == 0 ? 1 : 0.8
              )

              if item.value > 10000000
                text(
                  x=fx(countOuter - item.value/2, outer)
                  y=fy(countOuter - item.value/2, outer)
                  text-anchor="middle"
                  transform="translate(0 12)"
                  fill="#444"
                )
                  = item.name

      g
        circle(
          r=inner + (outer - inner) / 2
          stroke="#fff"
          fill="none"
          stroke-width=0
        )
        - countOuter = countInner = 0
        for series, s in chart.series
          - countInner += series.total

          if series.total > 1
            text(
              text-anchor="middle"
              stroke=chart.colors[s]
              stroke-opacity=0
              style="mix-blend-mode: darken"
              stroke-width=0
              transform=(`
                translate(
                ${fx(countInner - series.total/2, inner)}
                ${fy(countInner - series.total/2, inner)+(s%2==1?4:-4)}
                )
              `
              .replace(/\s+/g,"z")
              .replace(/(\d)z(-|\d)/g,"$1 $2")
              .replace(/z/g,"")
              )
            )
              for str, si in series.name.split(" ")
                tspan(y=si * 14 - 2 x=0)= str
            text(
              text-anchor="middle"
              fill="#fff" || chart.colors[s]
              transform=(`
                translate(
                ${fx(countInner - series.total/2, inner)}
                ${fy(countInner - series.total/2, inner)+(s%2==1?4:-4)}
                )
              `
              .replace(/\s+/g,"z")
              .replace(/(\d)z(-|\d)/g,"$1 $2")
              .replace(/z/g,"")
              )
            )
              for str, si in series.name.split(" ")
                tspan(y=si * 14 - 2 x=0)= str


          line(
            x1=fx(countInner, inner - 30)
            y1=fy(countInner, inner - 30)
            x2=fx(countInner, inner + 30)
            y2=fy(countInner, inner + 30)
            stroke="#fff"
            fill="none"
            stroke-width=0.5
          )
          for item, i in _.sortBy(series.values, "value").reverse()
            - countOuter += item.value

            line(
              x1=fx(countOuter, outer - 30)
              y1=fy(countOuter, outer - 30)
              x2=fx(countOuter, outer + 30)
              y2=fy(countOuter, outer + 30)
              stroke="#fff"
              fill="none"
              stroke-width=0.5
            )

    .chart-source.txt-muted
      != page.source


block append css
  style
    :sass
      .wrapper
        height: 400px
        overflow: visible
        position: relative

      .col-wrap
        margin: 0 -1em

      .col-md
        padding: 0 1em
        width: 50%

      .chart
        padding: 12px 20px 32px
        box-sizing: border-box

        > svg
          border-bottom: 1px solid #ccc
          height: 20px
          min-height: 100%

      text
        font-size: 12px

      svg
        overflow: visible

      .chart-source
        font-size: 14px

      @media screen and (max-width: 600px)
        .notes
          padding-top: 0
        .col-wrap
          flex-direction: column
        .col-md
          width: 100%
          height: 50%
          padding-bottom: 8px
          flex: 0
