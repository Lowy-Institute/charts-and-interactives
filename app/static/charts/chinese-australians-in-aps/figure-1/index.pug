extend /partials/layout

block append config
  - var datapath = "static/charts/chinese-australians-in-aps/figure-1/data"
  - var colorpath = "static/charts/templates/colors/data"
  - _.extend(page, data.getOne(datapath))
  - _.extend(page, data.getOne(colorpath))
  - toPercent = (n) => (n * 100).toFixed(2) + "%"
  - chart = page
  
block page
  .wrapper.flex
    .flex.flex-grow.flex-col
      .chart-title= chart.title
      .chart-subtitle.txt-muted.txt-tu.pv-sm!= chart.subtitle
      .chart.flex-grow: .chart-content
        - ln = chart.series[0].values.length
        - axes = chart.axes
        - minX = axes.minX
        - maxX = axes.maxX
        - range = maxX - minX
        - fx = (x) => (x - minX) / range
        - fy = (i) => (i + 0.7) / ln
        
        svg(height="100%" width="100%")
        
          - let steps = chart.axes.stepsX-1
          //- // X-Axis labels
          //- svg(width="100%" y="100%")
          //-   for n, i in new Array(steps+1)
          //-     - x = i / (steps)
          //-     svg.x-label(x=toPercent(x))
          //-       text(text-anchor="middle" transform="translate(0 18)")
          //-         = (minX + range*(i/steps)).toFixed(0) + (axes.percentage ? "%" : "")
          //- 
          //- // X-Axis minor lines
          //- if chart.axes.minorLines
          //- svg(width="100%")
          //-   for n, i in new Array(steps+1)
          //-     - x = (i / steps)
          //-     svg
          //-       line(
          //-         x1=toPercent(x)
          //-         y1="0%"
          //-         x2=toPercent(x)
          //-         y2="100%"
          //-         stroke="#5552"
          //-         stroke-dasharray=(chart.axes.dotted.includes(steps-i) ? 5 : "")
          //-       )

          // Chart rects
          g.bars
            - const n = chart.series[0].values.length
            for undef, i in new Array(n)
              svg(
                y=toPercent(fy(i)-fy(-0.15) )
                height=toPercent(fy(0))
                width="100%"
              )   
                - vals = chart.series.filter( (s, i) => i ).map( s => s.values[i] )
                - vals = axes.reverse ? vals.reverse() : vals
                - x0 = 0

                for v, j in vals
                  - ci = axes.reverse ? vals.length-j : j+1

                  if v > 0
                    rect(
                      x=toPercent(x0)
                      width=toPercent(fx(v))
                      height="100%"
                      fill=chart.colors[chart.series[ci].color]
                      data-v=v
                      data-c=i
                      data-s=j
                    )
                    text.chart-value(
                      x=toPercent(fx(v) + 0.01)
                      y="50%"
                      text-anchor="start"
                      transform="translate(0 4.5)"
                      style=`color: ${chart.colors[chart.series[ci].color]}`
                    )
                      = v.toFixed(1) + (axes.percentage ? "%" : "")

                  - x0 += fx(v)
                    
                // Y-Axis labels
                - let label = chart.series[0].values[i].split('-')
                svg.y-label(x="0%" y="50%")
                  text(
                    text-anchor="end"
                    class=label[1] ? "fixed-transform" : ""
                    transform=label[1] ? "translate(-16, -4)" : "translate(-16, 5)"
                  )
                    = label[0]

                    if label[1]
                      tspan(
                        x=0
                        dy=18
                      )= label[1]

      .chart-source.txt-left.txt-muted.txt-semi!= chart.source

  
block append css
  style
    :sass
  
      .wrapper
        height: 600px

      .chart
        box-sizing: border-box
        position: relative

      .chart-content
        position: absolute
        top: 0
        left: 140px
        right: 15px
        bottom: 30px

      .chart-title
        font-size: 28px
        
      .chart-subtitle
        font-weight: 600
        height: 10px
        margin-top: -10px
        margin-bottom: 1rem
        font-size: 15px
        
      .tooltip
        position: absolute
        left: 0
        background: #fffe
        padding: .75em
        opacity: 0
        border-radius: .2em
        box-shadow: 0 0 5px 0 #0004
        transition-duration: 0.5s
        pointer-events: none
        font-size: 14px
        max-width: 180px
        box-sizing: border-box

      li
        list-style: none
        margin: 0
        padding: 4px 16px 4px 24px

      .legend
        font-size: 15px
        margin: 8px 0

      .legend-item
        margin: 4px 8px
        padding-right: 0
        position: relative
        white-space: nowrap

      .legend-item-box
        position: absolute
        left: 0
        top: .5em
        height: 1em
        width: 1em
        background: black

      text
        font-size: 14px
        fill: currentColor

      svg
        overflow: visible
        
      .chart-notes, .chart-source
        margin-left: 2em
        font-size: 15px
        
      .chart-value
        font-size: 20px
        font-weight: 400
        
      
          
      @media (max-width: 400px)
        text
          font-size: 14px
        .chart-content
          bottom: 16px
          left: 95px
        .chart-title
          font-size: 24px
          font-weight: 500
        .chart-subtitle
          font-size: 14px
        .chart-notes,
        .chart-source
          font-size: 13px
        .y-label text
          transform: translate(-10px, 6px)
        .y-label text.fixed-transform
          transform: translate(-10px, -4px)
        .chart-value
          transform: translate(4px, 4.5px)
