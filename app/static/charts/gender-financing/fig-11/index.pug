extend /partials/layout

block append config
  - var datapath = "static/charts/gender-financing/fig-11/data"
  - var colorpath = "static/charts/templates/colors/data"
  - _.extend(page, data.getOne(datapath))
  - _.extend(page, data.getOne(colorpath))
  - toPercent = (n) => (n * 100).toFixed(2) + "%"
  - chart = page
  - red = "#ff4050"
  - redtxt = "#990f02"
  //- green = "#16B56F"
  - green = "#094b2e"
  - greentxt = "#006500"
  
block page
  .wrapper
    h1.txt-center= chart.title
    h2.txt-center.txt-muted= chart.subtitle
    table.mx-auto(cellspacing=0)
      thead
        tr
          th(color="#444" style="border-right:1px solid #444; border-bottom: 1px solid #444;") Country
          th(color="#444" style="text-align:center;border-bottom: 1px solid #444;") 2008
          th(color="#444" style="text-align:center;border-bottom: 1px solid #444;") 2009
          th(color="#444" style="text-align:center;border-bottom: 1px solid #444;") 2010
          th(color="#444" style="text-align:center;border-bottom: 1px solid #444;") 2011
          th(color="#444" style="text-align:center;border-bottom: 1px solid #444;") 2012
          th(color="#444" style="text-align:center;border-bottom: 1px solid #444;") 2013
          th(color="#444" style="text-align:center;border-bottom: 1px solid #444;") 2014
          th(color="#444" style="text-align:center;border-bottom: 1px solid #444;") 2015
          th(color="#444" style="text-align:center;border-bottom: 1px solid #444;") 2016
          th(color="#444" style="text-align:center;border-bottom: 1px solid #444;") 2017
          th(color="#444" style="text-align:center;border-bottom: 1px solid #444;") 2018
          th(color="#444" style="text-align:center;border-bottom: 1px solid #444;") 2019
          th(color="#444" style="text-align:center;border-bottom: 1px solid #444;") 2020
      tbody
        //for country,i in chart.series[0].values
          tr
            td= country
            for v,j in chart.series[1].values[i]
              - v = +v
              - color = Math.abs(v) < 0.1 ? "" : v > 0 ? greentxt : redtxt
              - bgcolor = v > 0 ? green : red
              - ratio = (255 * (v > 0 ? v / 1.5 : v / -5.5)).toFixed(0)
              - intensity = ("0" + (+ratio).toString(16)).slice(-2)
              //- v = null ? "null" : (v)
              td(
                style=`background-color: ${bgcolor}${intensity}; color: ${color};`
              )
                span= (v).toFixed(0) + "%"

        // using HSL color space
        //each country, i in chart.series[0].values
          tr
            td= country
            each v, j in chart.series[1].values[i]
              - v = +v
              - if (v === 0)
                - hue = 0
              - else if (v < 20)
                - hue = Math.floor((v / 50) * 60)
              - else
                - hue = Math.floor(60 + ((v - 50) / 50) * 60)
              - color = v > 0 ? "green" : v < 0 ? "red" : "black"
              td(
                style=`background-color: hsl(${hue}, 100%, 50%); color: ${color};`
              )
                span= (v).toFixed(0) + "%"

        // adjust hues slightly
        each country, i in chart.series[0].values
          tr
            td= country
            each v, j in chart.series[1].values[i]
              - v = +v
              - if (v === 0)
                - hue = 0
                - saturation = 70
                - lightness = 50
              - else if (v < 32.5)
                - hue = Math.floor((v / 32.5) * 70)
                - saturation = 70 + Math.floor((v / 32.5) * 20)
                - lightness = 65 + Math.floor((v / 32.5) * 10)
              - else
                - hue = Math.floor(70 + ((v - 32.5) / (60 - 32.5)) * 55)
                - saturation = 60 - Math.floor(((v - 32.5) / (60 - 32.5)) * 25)
                - lightness = 63 - Math.floor(((v - 32.5) / (60 - 32.5)) * 2)
              - color = v > 0 ? "green" : v < 0 ? "red" : "black"
              - textColor = lightness < 60 ? 'white' : 'black' // Determine text color based on background lightness
              td(
                style=`background-color: hsl(${hue}, ${saturation}%, ${lightness}%); color: ${color};`
              )
                span(style=`color: ${textColor};`) #{v.toFixed(0) + "%"}

    .chart-source.txt-muted.txt-cond!= chart.source

block append css
  style
    :sass
      html,
      body
        height: auto
        overflow: auto
        
      h1
        margin: auto
        font-size: 20px
        
      h2
        font-weight: 600
        height: 10px
        /* margin-top: -10px */
        font-size: 15px
      
      h1,h2
        font-family: "Sans"
        
      table
        border-bottom: 1px solid
        
      th
        border-top: 0px solid
        border-bottom: 0px solid
        padding: 6px .75rem 4px
        /* color: #fff

      td,th
        text-align: right
        font-size: 14px
        
      td
        padding: 3px .5rem
        
        span
          opacity: 1
        
      .wrapper
        height: 600px
        overflow-x: scroll

      .chart-notes, .chart-source
        margin-top: 1em
        margin-left: 3em
        font-size: 15px