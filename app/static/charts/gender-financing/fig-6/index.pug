extend /partials/layout

block append config
  - var datapath = "static/charts/gender-financing/fig-6/data"
  - var colorpath = "static/charts/templates/colors/data"
  - _.extend(page, data.getOne(datapath))
  - _.extend(page, data.getOne(colorpath))
  - toPercent = (n) => (n * 100).toFixed(2) + "%"
  - chart = page
  
block page
  .wrapper.flex
    .txt-center.flex.flex-grow.flex-col
      .chart-title= chart.title
      .chart-subtitle.txt-muted.txt-tu.p-sm!= chart.subtitle
      .chart.flex-grow: .chart-content
        - ln = chart.series[0].values.length
        - axes = chart.axes
        - minY = axes.minY
        - maxY = axes.maxY
        - range = maxY - minY
        - fx = (i) => (i + 0.6) / (ln + 0.75)
        - fy = (y) => (y - minY) / range
        
        svg(height="100%" width="100%")
          svg(y="50%")
           text(text-anchor="middle" y="-40" transform="rotate(-90)") Billions
        
          // Y-Axis labels
          svg(height="100%")
            svg(y="100.00%")
              text(text-anchor="end" transform="translate(-8 4)") 0
            svg(y="83.33%")
              text(text-anchor="end" transform="translate(-8 4)") 0.2
            svg(y="66.67%")
              text(text-anchor="end" transform="translate(-8 4)") 0.4
            svg(y="50.00%")
              text(text-anchor="end" transform="translate(-8 4)") 0.6
            svg(y="33.33%")
              text(text-anchor="end" transform="translate(-8 4)") 0.8
            svg(y="16.67%")
              text(text-anchor="end" transform="translate(-8 4)") 1
            svg(y="0.00%")
              text(text-anchor="end" transform="translate(-8 4)") 1.2
                
          // Y-Axis minor lines
          svg(height="100%")
            svg
              line(x1="0%" y1="0.00%" x2="100%" y2="0.00%" stroke="#5552" stroke-dasharray="")
            svg
              line(x1="0%" y1="16.67%" x2="100%" y2="16.67%" stroke="#5552" stroke-dasharray="")
            svg
              line(x1="0%" y1="33.33%" x2="100%" y2="33.33%" stroke="#5552" stroke-dasharray="")
            svg
              line(x1="0%" y1="50.00%" x2="100%" y2="50.00%" stroke="#5552" stroke-dasharray="")
            svg
              line(x1="0%" y1="66.67%" x2="100%" y2="66.67%" stroke="#5552" stroke-dasharray="")
            svg
              line(x1="0%" y1="83.33%" x2="100%" y2="83.33%" stroke="#5552" stroke-dasharray="")

          // Chart rects
          g.bars
            - const n = chart.series[0].values.length
            for undef, i in new Array(n)
              svg(
                x=toPercent(fx(i))
                width=toPercent(fx(0))
                height="100%"
              )   
                - y = 1
                - vals = chart.series.filter( (s, i) => i ).map( s => s.values[i] )
                - vals = axes.reverse ? vals.reverse() : vals

                for v, j in vals
                  - ci = axes.reverse ? vals.length-j : j+1
                  if v > 0
                    rect(
                      y=toPercent(y-fy(v))
                      height=toPercent(fy(v))
                      width="100%"
                      fill=chart.colors[chart.series[ci].color]
                    )
                    text.chart-value(
                      x="50%"
                      y=toPercent(y-fy(v))
                      text-anchor="middle"
                      transform="translate(0 -8)"
                      style=`color: ${(j < 3 ? "#68389a" : "")}`
                    )
                      = v.toFixed(2)

                  - y -= fy(v)
                    
                // X-Axis labels
                svg.x-label(x="50%" y="100%")
                  text(
                    text-anchor=axes.rotateX ? "end" : "middle"
                    transform=axes.rotateX ? "rotate(-45) translate(-2, 20)" : "translate(0 20)"
                  )
                    =chart.series[0].values[i]
      
      //.row
        ul.legend.list-bare.txt-left.flex.flex-ch
          for ax, i in new Array(chart.series.length)
            if i
              li.legend-item
                span.legend-item-box(style=`background: ${chart.colors[chart.series[i].color]}`)
                span.legend-item-label= chart.series[i].title

      .chart-source.txt-left.txt-muted.txt-cond!= chart.source
      .chart-notes.txt-left.txt-muted.txt-cond!= chart.notes
      
      .tooltip

  script.


    /* --- USER TO UPDATE --- */
    const enableTooltips = true;
    const nLegendItems = 1;
    const nSeries = 2;
    /* --------------------- */
    
    const chart = document.querySelectorAll('.chart-content');
    const rects = document.querySelectorAll('rect');
    const vals = document.querySelectorAll('.chart-value');
    const series = document.querySelectorAll('.x-label');
    const tooltip = document.querySelector('.tooltip');
    const legendItems = document.querySelectorAll('.legend-item-label');
    
    if (enableTooltips) {
      window.addEventListener('DOMContentLoaded', () => {
        rects.forEach( (rect, i) => addHoverEventListeners(rect, i) );  
      });
    }
        
    function addHoverEventListeners(el, i) {
      el.addEventListener('mouseover', () => {
        
        let val = vals[i].innerHTML;
        let ser = series[ Math.floor(i/nLegendItems) ].innerHTML;
        let cat = legendItems[i % nLegendItems].innerHTML;
        let box = el.getBoundingClientRect();
        
        tooltip.innerHTML = "In " + ser + " real revenue was " + val + " (K'millions)";
        tooltip.style.left = box.left + box.width/2 - tooltip.offsetWidth/2 + 'px';
        tooltip.style.top = box.top - tooltip.offsetHeight + 'px';
        tooltip.style.opacity = 1;
        
      });
      
      el.addEventListener('mouseleave', () => { 
        tooltip.style.opacity = 0;
      });
      
    }
    
  
block append css
  style
    :sass
  
      .wrapper
        height: 550px

      .chart
        box-sizing: border-box
        position: relative

      .chart-content
        position: absolute
        top: 20px
        left: 50px
        right: 20px
        bottom: 80px

      .chart-content > svg
        border-bottom: 1px solid #bbb

      .chart-title
        margin: auto
        font-size: 20px
        
      .chart-subtitle
        font-weight: 700
        height: 10px
        margin-top: -10px
        font-size: 15px
        
      .tooltip
        position: absolute
        left: 0
        background: #fffe
        padding: .75em
        opacity: 0
        border-radius: .2em
        box-shadow: 0 0 5px 0 #0004
        transition-duration: 0.5s
        pointer-events: none
        font-size: 14px
        text-transform: none
        max-width: 180px
        box-sizing: border-box

      li
        list-style: none
        margin: 0
        padding: 4px 16px 4px 24px

      .legend
        font-size: 15px
        margin-bottom: .75em

      .legend-item
        margin: 4px 8px 0
        padding-right: 0
        position: relative
        white-space: nowrap

      .legend-item-box
        position: absolute
        left: 0
        top: .5em
        height: 1em
        width: 1em
        background: black


      text
        font-size: 14px
        fill: currentColor

      .chart-value 
        font-size: 14px

      svg
        overflow: visible
        
      .chart-notes, .chart-source
        margin-top: 1em
        margin-left: 3em
        font-size: 15px
      .txt-muted
        color: #767676
        
      .chart-value
        opacity: 1
        transition-duration: .4s
        pointer-events: none
      
      .chart-content:hover .chart-value
        opacity: 1

      @media (max-width: 700px)
        
        .x-label text
          text-anchor: end
          transform: rotate(-45deg) translate(-8px, 14px)

        text
          font-size: 13px
          
      @media (max-width: 450px)
        .chart-content
          bottom: 100px
        .legend
          flex-direction: column
        .chart-title
          font-size: 18px
        .chart-subtitle
          font-size: 14px
        .chart-notes,
        .chart-source
          text-align: center
          font-size: 13px
        .x-label text
          font-size: 11px