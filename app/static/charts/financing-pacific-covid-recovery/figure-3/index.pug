extend /partials/layout

block append config
  - var datapath = "static/charts/financing-pacific-covid-recovery/figure-3/data"
  - var colorpath = "static/charts/templates/colors/data"
  - _.extend(page, data.getOne(datapath))
  - _.extend(page, data.getOne(colorpath))
  - toPercent = (n) => (n * 100).toFixed(2) + "%"
  - chart = page
  
block page
  .wrapper.flex
    .txt-center.flex.flex-grow.flex-col
      .chart-title!= chart.title
      .chart-subtitle.txt-muted.txt-tu.p-sm!= chart.subtitle
      .chart.flex-grow: .chart-content
        - ln = chart.series[0].values.length
        - axes = chart.axes
        - minY = axes.minY
        - maxY = axes.maxY
        - range = maxY - minY
        - fx = (i) => (i + 0.75) / (ln + 1.5)
        - fy = (y) => (y - minY) / range
        
        svg(height="100%" width="100%")
        
          // Y-Axis labels
          svg(height="100%")
            - let steps = chart.axes.stepsY-1
            for n, i in new Array(steps+1)
              - y = 1 - (i / (steps))
              svg(y=toPercent(y))
                text(text-anchor="end" transform="translate(-8 4)")
                  = "$" + (minY + range*(i/steps)) + "B"
            svg(y="50%")
              text.y-label US$ billions
                
          // Y-Axis minor lines
          if chart.axes.minorLines
            svg(height="100%")
              for n, i in new Array(steps)
                - y = (i / steps)
                svg
                  line(
                    x1="0%"
                    y1=toPercent(y)
                    x2="100%"
                    y2=toPercent(y)
                    stroke="#5552"
                    stroke-dasharray=(chart.axes.dotted.includes(steps-i) ? 5 : "")
                  )

          // Chart rects
          g.bars
            - const n = chart.series[0].values.length
            for undef, i in new Array(n)
              svg(
                x=toPercent(fx(i))
                width=toPercent(fx(0))
                height="100%"
              )   
                - y = 1
                - vals = chart.series.filter( (s, i) => i ).map( s => s.values[i] )
                - vals = axes.reverse ? vals.reverse() : vals

                for v, j in vals
                  - ci = axes.reverse ? vals.length-j : j+1
                  if v > 0
                    rect(
                      x="10%"
                      y=toPercent(y-fy(v))
                      height=toPercent(fy(v))
                      width="80%"
                      fill=chart.colors[chart.series[ci].color]
                    )
                    text.chart-value(
                      x="50%"
                      y=toPercent(y - fy(v/2))
                      text-anchor="middle"
                      transform="translate(0 4.5)"
                      style=`color: ${(j < 2 ? "white" : chart.colors[chart.series[0].color])}`
                    )
                      = "$" + v.toFixed(3) + "B"

                  - y -= fy(v)
                    
                // X-Axis labels
                svg.x-label(x="50%" y="100%")
                  text(
                    text-anchor=axes.rotateX ? "end" : "middle"
                    transform=axes.rotateX ? "rotate(-45) translate(-8, 14)" : "translate(0 20)"
                  )
                    =chart.series[0].values[i]
      
      .row
        ul.legend.list-bare.txt-left.flex.flex-ch
          for ax, i in new Array(chart.series.length)
            if i
              li.legend-item
                span.legend-item-box(style=`background: ${chart.colors[chart.series[i].color]}`)
                span.legend-item-label= chart.series[i].title

      //- .chart-source.txt-right.txt-muted.txt-cond!= chart.source
      //- .chart-notes.txt-right.txt-muted.txt-cond!= chart.notes
  
block append css
  style
    :sass
  
      .wrapper
        height: 550px

      .chart
        box-sizing: border-box
        position: relative

      .chart-content
        position: absolute
        top: 20px
        left: 65px
        right: 20px
        bottom: 40px

      .chart-content > svg
        border-bottom: 1px solid #bbb

      .chart-title
        margin: auto
        font-size: 20px
        
      .chart-subtitle
        font-weight: 600
        height: 10px
        margin-top: -10px
        font-size: 15px
        
      li
        list-style: none
        margin: 0
        padding: 4px 16px 4px 24px

      .legend
        font-size: 15px
        margin-bottom: .75em

      .legend-item
        margin: 4px 8px 0
        padding-right: 0
        position: relative
        white-space: nowrap

      .legend-item-box
        position: absolute
        left: 0
        top: .5em
        height: 1em
        width: 1em
        background: black

      text
        font-size: 14px
        fill: currentColor

      svg
        overflow: visible
        
      .y-label
        transform: rotate(-90deg) translate(-1.5rem, -3rem)
        
      .chart-notes, .chart-source
        margin-left: 2em
        font-size: 15px
        
      .chart-value
        opacity: 0
        transition-duration: .4s
        pointer-events: none
      
      .chart-content:hover .chart-value
        opacity: 1

      @media (max-width: 700px)

        text
          font-size: 13px
          
      @media (max-width: 450px)
        .chart-content
          left: 60px
        .chart-title
          font-size: 18px
        .chart-subtitle
          font-size: 14px
        .chart-notes,
        .chart-source
          text-align: center
          font-size: 13px
          
      @media (max-width: 400px)
        rect
          width: 100%
          x: 0
        .chart-content
          bottom: 75px
        .x-label text
          text-anchor: end
          transform: rotate(-45deg) translate(-8px, 14px)
      
