extend /partials/layout

block append config
  - var datapath = "static/charts/revising-down-rise-china/figure-12/data"
  - _.extend(page, data.getOne(datapath))
  - toPercent = (n) => (n * 100).toFixed(2) + "%"

block page
  .wrapper.flex.flex-col

    .page-title.txt-center= page.title
              
    .col-wrap.txt-center.flex-grow.flex.txt-sm
      .col-md.flex-grow.flex.flex-col
        - chart = page.charts[0]
        - scale = chart.scale
        - fx = (i, len) => (i) / (len - 1)
        - fy = (y) => (y - scale.minY) / (scale.maxY - scale.minY)

        .chart-title= chart.title
        .chart-subtitle.txt-muted.txt-sm= chart.subtitle

        .chart.flex-grow: .chart-content
          svg(height="100%" width="100%")
            svg(height="100%")
              for n, i in new Array(scale.ticks)
                - y = 1 - (i / (scale.ticks - 1))
                svg(y=toPercent(y))
                  text(text-anchor="end" transform="translate(-8 4)")
                    = (scale.minY + (i/(scale.ticks - 1)) * (scale.maxY - scale.minY)) + "%"

            svg(width="100%" y="100%")
              for year, i in chart.axes[0].values
                svg(x=toPercent(fx(i, chart.axes[0].values.length)))
                  text(
                    text-anchor="middle"
                    transform="translate(0 20)"
                  )
                    = year

            svg(
              width="100%"
              height="100%"
              viewBox="0 0 100 100"
              preserveAspectRatio="none"
            )
              for item, ii in chart.legend
                - var i = chart.legend.length - ii
                path(
                  fill=chart.colors[i - 1]
                  d="M" + (chart.axes[1].values.map((y, ix, a) => (
                    [
                      100 * fx(ix, a.length),
                      100 * fy(scale.maxY - _.sum(y.slice(0,i)))
                    ].join(" ")
                  )
                  ).concat(["100 100", "0 100"])
                  ).join("L") + "Z"
                )

        ul.legend.txt-nowrap.flex-wrap.list-bare.txt-left.flex.flex-ch
          for item, i in chart.legend
            li.legend-item
              span.legend-item-box(style=`background:${chart.colors[i]}`)
              span.legend-item-label!= item

      .col-md.flex-grow.flex.flex-col
        - chart = page.charts[1]
        - scale = chart.scale
        - fx = (i, len) => (i) / (len - 1)
        - fy = (y) => (y - scale.minY) / (scale.maxY - scale.minY)
      
        .chart-title= chart.title
        .chart-subtitle.txt-muted.txt-sm= chart.subtitle
      
        .chart.flex-grow: .chart-content
          svg(height="100%" width="100%")
            svg(height="100%")
              for n, i in new Array(scale.ticks)
                - y = 1 - (i / (scale.ticks - 1))
                svg(y=toPercent(y))
                  text(text-anchor="end" transform="translate(-8 4)")
                    = (scale.minY + (i/(scale.ticks - 1)) * (scale.maxY - scale.minY)) + "%"
      
            svg(width="100%" y="100%")
              for year, i in chart.axes[0].values
                svg(x=toPercent(fx(i, chart.axes[0].values.length)))
                  text(
                    text-anchor="middle"
                    transform="translate(-2.4 20)"
                  )
                    if i != chart.axes[0].values.length - 1
                      = year
      
            svg(
              width="100%"
              height="100%"
              viewBox="0 0 100 100"
              preserveAspectRatio="none"
            )
              for item, ii in chart.legend
                - var i = chart.legend.length - ii
                path(
                  fill=chart.colors[i - 1]
                  d="M" + (chart.axes[1].values.map((y, ix, a) => (
                    [
                      100 * fx(ix, a.length),
                      100 * fy(scale.maxY - _.sum(y.slice(0,i)))
                    ].join(" ")
                  )
                  ).concat(["100 100", "0 100"])
                  ).join("L") + "Z"
                )
      
        ul.legend.txt-nowrap.flex-wrap.list-bare.txt-left.flex.flex-ch
          for item, i in chart.legend
            li.legend-item
              span.legend-item-box(style=`background:${chart.colors[i]}`)
              span.legend-item-label!= item

    .flex.br-top
      //-.chart-notes.txt-muted
        !=page.notes
      .chart-source.txt-right.txt-muted
        !=page.source


block append css
  style
    :sass
      .wrapper
        height: 550px
        overflow: visible
        position: relative
        margin-left: 10px
        margin-right: -20px

      .col-wrap
        margin-top: 20px
        
      .col-md
        padding: 0 1em
        width: 50%

      .chart
        box-sizing: border-box
        position: relative

      .chart-content
        position: absolute
        top: 20px
        bottom: 45px
        .col-md:first-child &
          left: 60px
          right: 15px
        .col-md:last-child &
          left: 10px
          right: 60px
          
      .chart-content > svg
        border-bottom: 1px solid #ccc

      .page-title
        margin-bottom: 0px
        font-size: 18px

      .chart-title,
      .chart-subtitle
        .col-md:first-child &
          padding-left: 60px
          padding-right: 15px
        .col-md:last-child &
          padding-left: 10px
          padding-right: 60px

      .chart-title
        font-weight: 500
        font-size: 15px
        max-width: 320px
        line-height: 1.2
        margin: -16px auto auto auto

      .chart-subtitle
        height: 0
        text-transform: uppercase
        font-weight: 600
        font-size: 10px
        margin-bottom: 0px

      .legend
        max-width: 100%
        font-size: 13px
        margin: auto
        min-height: 3em
        .col-md:first-child &
          padding-left: 30px
        .col-md:last-child &
          padding-right: 30px
          
      .legend-item
        margin: 4px 8px 0
        padding-left: 16px
        position: relative

      .legend-item-box
        position: absolute
        left: 0
        top: 4px
        height: .8em
        width: .8em
        background: black

      text
        font-size: 13px

        &:not([fill])
          fill: currentColor

      svg
        overflow: visible

      sup
        line-height: 0

      polyline
        vector-effect: non-scaling-stroke

      .br-top
        border-top: 1px solid #888
        padding: 8px 5px 0
        margin-top: 8px
        > *
          margin: 0 4px
        
      .chart-notes
        font-size: 12px
        line-height: 1.2

      .chart-source
        font-size: 12px
        max-width: 100%
      // flex: 0.45

      .chart-value
        opacity: 0
        transition: opacity 300ms

        &.txt-fff
          fill: #fff

        .chart:hover
          opacity: 1

      .hover-hide
        transition: opacity 300ms


      @media screen and (max-width: 800px)
        .wrapper
          height: 1350px
          margin: 0
        .chart-content
          left: 60px!important
          right: 60px!important
        .chart-notes
          padding-top: 0
        .col-wrap
          flex-direction: column
          align-items: center
          max-height: 570px
          min-height: 400px
        .col-md
          max-width: 600px
          width: 100%
          height: 50%
          margin-bottom: 16px
          padding-bottom: 16px
        .flex.br-top
          flex-direction: column
        .chart-source
          padding-top: 4px

        .chart-title,
        .chart-subtitle
          .col-md:first-child &,
          .col-md:last-child &
            padding: 0
            
