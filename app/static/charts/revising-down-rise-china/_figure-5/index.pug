extend /partials/layout

block append config
  - var datapath = "static/charts/revising-down-rise-china/figure-5/data"
  - var colorpath = "static/charts/templates/colors/data"
  - _.extend(page, data.getOne(datapath))
  - _.extend(page, data.getOne(colorpath))
  - toPercent = (n) => (n * 100).toFixed(2) + "%"
  - isEmpty = (y) => (y === undefined || y == null || y.length <= 0)
  - chart = page
  
block page
  .wrapper.flex
    .txt-center.flex.flex-grow.flex-col
      .chart-title!= chart.title
      .chart-subtitle.txt-muted.txt-tu.p-sm!= chart.subtitle
      .chart.flex-grow: .chart-content
        - ln = chart.series[0].values.length
        - axes = chart.axes
        - minY = axes.minY
        - maxY = axes.maxY
        - range = maxY - minY
        - fx = (i) => (i + 0.4) / (ln - 0.2)
        - fy = (y) => (y - minY) / range
        
        svg(height="100%" width="100%")
        
          // Y-Axis labels
          svg(height="100%")
            - let steps = chart.axes.stepsY-1
            for n, i in new Array(steps+1)
              - y = 1 - (i / (steps))
              svg(y=toPercent(y))
                text(text-anchor="end" transform="translate(-8 4)")
                  = minY + range*(i/steps) + (axes.percentage ? "%" : "")
            // svg(y="50%")
            //  text.y-label Million square metres
                
          // Y-Axis minor lines
          if chart.axes.minorLines
            svg(height="100%")
              for n, i in new Array(steps)
                - y = (i / steps)
                svg
                  line.gridlines(
                    x1="0%"
                    y1=toPercent(y)
                    x2="100%"
                    y2=toPercent(y)
                    stroke="#5552"
                    stroke-dasharray=(chart.axes.dotted.includes(steps-i) ? 5 : "")
                  )

          // X-Axis labels
          for x, i in chart.series[0].values
            //if [t-30,000,2010,2020,2030,2040,2050].includes(x)
            svg.x-label(x=toPercent(fx(i)) y="100%")
              text(
                text-anchor=axes.rotateX ? "end" : "middle"
                transform=axes.rotateX ? "rotate(-45) translate(-8, 14)" : "translate(0 20)"
              )=x
              
          // OPTIONAL GUIDE LINE
          if !isEmpty(axes.guideLine)
            - var y = 100*fy(maxY + minY - axes.guideLine)+"%"
            line(
              x1="0" y1=y x2="100%" y2=y
              stroke="#333"
              stroke-width=.25
              stroke-dasharray=(false ? 1 : "")
            )

          // CHART LINES
          svg(
            height="100%"
            width="100%"
            viewBox="0 0 100 100"
            preserveAspectRatio="none"
          )
            // SERIES LINES
            for item, i in chart.series
              if i
                polyline(
                  fill="none"
                  stroke=chart.colors[chart.series[i].color]
                  stroke-dasharray=(item.dashed ? 10 : "")
                  stroke-width=(item.widen ? 6 : 3)
                  stroke-linejoin=(item.dashed ? "": "round")
                  stroke-linecap=(item.dashed ? "": "round")
                  points=(item.values.map( (y, ix) => {
                    return isEmpty(y) ? "" : [
                      (100 * fx(ix)).toFixed(3),
                      (100 * fy(maxY + minY - y)).toFixed(3)
                    ].join(" ");
                  })).filter( e => e ).join(",")
                )
          
          // for item, i in chart.series
            g
              for val, ix in item.values
                if true
                  circle(
                    r=3
                    cx=toPercent(fx(ix))
                    cy=toPercent(fy(maxY + minY - val))
                    fill=chart.colors[chart.series[i].color]
                    stroke='#fff'
                    stroke-width=1
                  )
                svg.chart-value(
                  x=toPercent(fx(ix))
                  y=toPercent(fy(maxY + minY - val))
                  style=`color: ${chart.colors[chart.series[i].color]}`
                )
                  text(
                    y=( (i != 1) && !(i==3 && [11,12].includes(ix)) ? -12 : 24)
                    text-anchor="middle"
                    fill=chart.colors[chart.series[i].color]
                  )
                  // = val && !( i==3 && ([5,6,13,14,15].includes(ix)) ) && !(i==1 && ix==4) ? val.toFixed(1) : ""

                // svg(height="100%" width="100%" viewBox="0 0 100 100" preserveAspectRatio="none")
                    polyline(points="18.95 20.00 39.95 47.50 61.05 75.00 82.105 80.0" fill="none" stroke="#06225c" stroke-width=".75")
                    polyline(fill="none" stroke="#ff4050" stroke-dasharray="" stroke-width="6" stroke-linejoin="round" stroke-linecap="round" points="0.658 49.935,2.303 51.177,3.947 45.853,5.592 30.589,7.237 22.872,8.882 22.481,10.526 23.988,12.171 24.939,13.816 23.604,15.461 13.415,17.105 14.761,18.750 18.637,20.395 18.889,22.039 21.459,23.684 18.519,25.329 21.010,26.974 25.726,28.618 32.028,30.263 36.883,31.908 36.192,33.553 25.189,35.197 29.326,36.842 38.425,38.487 39.301,40.132 39.811,41.776 41.044,43.421 38.737,45.066 33.189,46.711 30.933,48.355 32.054,50.000 30.667")
                    polyline(fill="none" stroke="#ff4050" stroke-dasharray="" stroke-width="6" stroke-linejoin="round" stroke-linecap="round" points="2 31 1.5 30.5 2 30.5 2.5 30.5 2 30.5 2.5 30.5 2.5 30 3 30 3.5 30 4 30 4.5 29.5 5.5 29.5 6.5 29 7 29 7 28.5 7.5 28.5 8.5 28.5 10 28 11.5 27.5 12.5 27 13.5 26.5 15 26 16 25.5 17 25 18.5 24 20 23.5 21.5 23 23.5 22 26 21.5 29 20.5 32.5 19.5 37 18.5 40.5 18 44.5 17 49 15.5 53.5 14 57.5 13 62 11.5 66 10 70.5 9 75.5 7 80.5 5.5 86 3.5 91.5 1.5")
          
          svg
            g(id="red_solid_line")
              g(class="cls-2")
                polyline(class="cls-3" fill="none" stroke="#ec1e24" stroke-dasharray="" stroke-width="6" stroke-linejoin="round" stroke-linecap="round" points="6.11 173.96 5.61 173.46 6.11 173.46 6.61 173.46 6.11 173.46 6.61 173.46 6.61 172.96 7.11 172.96 7.61 172.96 8.11 172.96 8.61 172.46 9.61 172.46 10.61 171.96 11.11 171.96 11.11 171.46 11.61 171.46 12.61 171.46 14.11 170.96 15.61 170.46 16.61 169.96 17.61 169.46 19.11 168.96 20.11 168.46 21.11 167.96 22.61 166.96 24.11 166.46 25.61 165.96 27.61 164.96 30.11 164.46 33.11 163.46 36.61 162.46 41.11 161.46 44.61 160.96 48.61 159.96 53.11 158.46 57.61 156.96 61.61 155.96 66.11 154.46 70.11 152.96 74.61 151.96 79.61 149.96 84.61 148.46 90.11 146.46 95.61 144.46")
            g(id="blue_solid_line")
              g(class="cls-2")
                polyline(class="cls-4" fill="none" stroke="#28ade3" stroke-dasharray="" stroke-width="6" stroke-linejoin="round" stroke-linecap="round" points="45.11 161.46 49.61 161.46 53.11 160.96 57.11 160.46 62.11 159.46 64.61 158.96 69.61 158.46 75.61 157.46 82.61 156.46 91.61 154.96 99.61 153.46 103.61 151.96 111.11 149.96 117.11 147.96 116.61 144.96 120.11 142.96 123.61 140.96 127.61 138.96 133.11 136.96 138.61 134.46 141.61 131.96 146.11 129.96 149.61 127.46 152.61 125.96 158.61 123.96 166.11 122.46 170.61 120.96 178.11 119.46 187.61 118.46 194.11 116.96 200.11 116.46 202.61 115.96 202.11 114.46 200.61 112.46 202.11 109.46 207.11 106.96 213.11 104.46 214.11 101.96 214.11 98.96 216.61 95.96 224.11 92.96 226.11 90.96 229.11 88.46 232.61 87.46 236.11 87.46 238.11 87.96 239.61 88.96 241.61 89.96 239.11 90.46 228.61 90.46 238.61 90.46 238.11 91.46 242.11 91.96 245.61 92.96 245.11 93.96 246.61 94.96 245.61 96.46 248.61 97.46 245.61 99.46 245.11 100.46")
            g(id="red_dashed_line")
              g(class="cls-2")
                path(class="cls-5" fill="#ec1e24" d="M329.68,164.38l.82-.29,6.91-3a1.5,1.5,0,0,1,1.18,2.76l-7.09,3-.81.29a1.5,1.5,0,1,1-1-2.82Zm-19.58,7.67,6.36-2.45,2-.84a1.5,1.5,0,0,1,1.18,2.76l-2.06.88-6.36,2.45a1.5,1.5,0,1,1-1.08-2.8Zm-19.63,7.21.56-.18,5.89-2.46,2-.62a1.5,1.5,0,0,1,.88,2.87l-1.69.51L292,181.92l-.55.19a1.5,1.5,0,0,1-.95-2.85Zm-19.87,6.79,2.93-1,5.46-2,.09,0a1.5,1.5,0,1,1,.95,2.84h0l-5.54,2-2.92,1a1.5,1.5,0,0,1-.95-2.85Zm-19.92,6.79,4.81-1.75,3.72-1.24a1.5,1.5,0,1,1,1,2.84l-3.65,1.22-4.8,1.75a1.5,1.5,0,0,1-1-2.82Zm-20.08,5.67,3.51-1,5-1.49.17,0a1.5,1.5,0,0,1,.79,2.89l-.1,0-5,1.51-3.51,1a1.5,1.5,0,1,1-.78-2.89Zm-20.31,5.86,3.15-1.26,5.13-1.55.51-.11a1.5,1.5,0,0,1,.59,3l-.24,0-4.87,1.45-3.16,1.26a1.5,1.5,0,1,1-1.11-2.78Zm-19.62,7.92,1.11-.61,5.6-2.55,1.7-.62a1.5,1.5,0,0,1,1,2.82l-1.48.54-5.4,2.45-1.11.6a1.5,1.5,0,1,1-1.44-2.63Zm-18.83,8.9,2.58-1.07,5.46-2.74a1.5,1.5,0,0,1,1.34,2.69l-5.64,2.81L173,224a1.5,1.5,0,0,1-1.16-2.77ZM153,229.59l5.5-2-.55.35,2.23-2.23a1.5,1.5,0,0,1,2.12,2.12l-2.23,2.23a1.44,1.44,0,0,1-.55.35l-5.5,2a1.5,1.5,0,1,1-1-2.82Z" transform="translate(-63.39 -84.54)")
            g(id="red_dotted_line")
              g(class="cls-2")
                path(class="cls-5" fill="#ec1e24" d="M364.49,84.89h0a1.5,1.5,0,0,1,1.9,2.32h0a1.5,1.5,0,1,1-1.91-2.31Zm-4.63,3.81h0A1.5,1.5,0,0,1,361.77,91h0a1.5,1.5,0,0,1-1.9-2.32Zm-4.65,3.87h0a1.5,1.5,0,1,1,2,2.26h0a1.5,1.5,0,0,1-2-2.26Zm-4.52,4h0a1.5,1.5,0,0,1,2,2.26h0a1.5,1.5,0,0,1-2-2.26Zm-4.54,3.77h0a1.5,1.5,0,1,1,1.83,2.38h0a1.5,1.5,0,0,1-1.82-2.38Zm-4.77,3.65h0a1.5,1.5,0,1,1,1.83,2.38h0a1.5,1.5,0,1,1-1.82-2.38Zm-4.73,3.76h0a1.5,1.5,0,1,1,1.89,2.32h0a1.5,1.5,0,0,1-1.89-2.33ZM332,111.48h0a1.5,1.5,0,1,1,1.89,2.33h0a1.5,1.5,0,1,1-1.89-2.33Zm-4.66,3.79h0a1.5,1.5,0,1,1,1.89,2.32h0a1.5,1.5,0,0,1-1.89-2.33ZM322.67,119h0a1.5,1.5,0,0,1,1.87,2.34h0a1.5,1.5,0,1,1-1.88-2.34ZM318,122.79h0a1.5,1.5,0,1,1,1.87,2.34h0a1.5,1.5,0,1,1-1.87-2.34Zm-4.73,3.59h0A1.5,1.5,0,1,1,315,128.8h0a1.5,1.5,0,1,1-1.77-2.42ZM308.38,130h0a1.5,1.5,0,0,1,1.86,2.36h0a1.5,1.5,0,1,1-1.86-2.36Zm-4.72,3.71h0a1.5,1.5,0,0,1,1.86,2.36h0a1.5,1.5,0,0,1-1.86-2.36Zm-4.74,3.59h0a1.5,1.5,0,0,1,1.77,2.42h0a1.5,1.5,0,1,1-1.77-2.42ZM294,140.85h0a1.5,1.5,0,0,1,1.85,2.36h0a1.5,1.5,0,1,1-1.86-2.36Zm-4.72,3.71h0a1.5,1.5,0,0,1,1.85,2.36h0a1.5,1.5,0,1,1-1.86-2.36Zm-4.72,3.71h0a1.49,1.49,0,0,1,2.1.25,1.51,1.51,0,0,1-.25,2.11h0a1.5,1.5,0,0,1-1.86-2.36ZM279.87,152h0a1.5,1.5,0,0,1,1.85,2.35h0a1.5,1.5,0,0,1-1.86-2.36Zm-4.72,3.71h0A1.5,1.5,0,0,1,277,158h0a1.5,1.5,0,0,1-1.86-2.36Zm-4.75,3.54h0a1.5,1.5,0,0,1,1.74,2.44h0a1.5,1.5,0,0,1-1.74-2.44Zm-4.92,3.56h0a1.5,1.5,0,1,1,1.85,2.36h0a1.5,1.5,0,1,1-1.85-2.36Zm-4.72,3.71h0a1.5,1.5,0,1,1,1.85,2.36h0a1.5,1.5,0,1,1-1.85-2.36ZM256,170h0a1.5,1.5,0,1,1,1.74,2.44h0A1.5,1.5,0,0,1,256,170Zm-4.88,3.46h0a1.5,1.5,0,0,1,1.71,2.47h0a1.5,1.5,0,0,1-1.7-2.47Zm-4.94,3.42h0a1.5,1.5,0,0,1,1.7,2.47h0a1.5,1.5,0,0,1-1.71-2.47Zm-4.86,3.62h0a1.5,1.5,0,0,1,1.8,2.4h0a1.5,1.5,0,0,1-1.8-2.4Zm-4.89,3.23h0A1.5,1.5,0,1,1,238,186.3h0a1.49,1.49,0,0,1-2.06-.49A1.5,1.5,0,0,1,236.42,183.75Zm-5.11,3.39h0a1.5,1.5,0,0,1,1.8,2.4h0a1.5,1.5,0,0,1-1.8-2.4Zm-4.76,3.52h0a1.5,1.5,0,0,1,1.67,2.5h0a1.5,1.5,0,0,1-1.67-2.5Zm-5,3.33h0a1.5,1.5,0,1,1,1.66,2.5h0a1.5,1.5,0,0,1-1.66-2.5Zm-5.1,3h0a1.5,1.5,0,1,1,1.52,2.59h0a1.5,1.5,0,1,1-1.52-2.59Zm-5.14,3.21h0a1.5,1.5,0,0,1,1.62,2.53h0a1.5,1.5,0,0,1-1.61-2.53Zm-5.1,3.06h0a1.5,1.5,0,1,1,1.51,2.59h0a1.5,1.5,0,1,1-1.52-2.59Zm-5.18,3h0a1.5,1.5,0,0,1,1.51,2.59h0a1.5,1.5,0,1,1-1.51-2.59Zm-5.19,3h0a1.5,1.5,0,1,1,1.52,2.59h0a1.5,1.5,0,1,1-1.52-2.59Zm-5.16,3h0a1.5,1.5,0,1,1,1.44,2.63h0a1.5,1.5,0,1,1-1.43-2.63ZM185.52,215h0a1.5,1.5,0,1,1,1.15,2.77h0a1.5,1.5,0,0,1-1.15-2.77Zm-5.63,2.39h0a1.5,1.5,0,0,1,1.34,2.69h0a1.5,1.5,0,0,1-1.34-2.68Zm-5.36,2.68h0a1.5,1.5,0,1,1,1.34,2.68h0a1.5,1.5,0,1,1-1.34-2.68Zm-5.45,2.28h0a1.5,1.5,0,1,1,1.15,2.77h0a1.5,1.5,0,0,1-1.16-2.77Zm-5.57,1.91h0a1.5,1.5,0,1,1,1,2.84h0a1.5,1.5,0,0,1-1-2.85ZM158,227.83h0a1.5,1.5,0,1,1,2.12,2.12h0a1.5,1.5,0,1,1-2.13-2.12Zm-5,1.76h0a1.5,1.5,0,0,1,1,2.82h0a1.5,1.5,0,1,1-1-2.82Z" transform="translate(-63.39 -84.54)")

      .row
        p Output per worker (2017 $PPP)
      .row
        ul.legend.list-bare.txt-left.flex.flex-ch
          - l = chart.series.length
          for ax, i in new Array(l)
            if (l-i)==1 || (l-i)==2 || (l-i)==3 || (l-i)==4 || (l-i)==5
              li.legend-item
                span.legend-item-box(style=`background: ${chart.colors[chart.series[l-i].color]}`)
                span.legend-item-label= chart.series[l-i].title

      //- .chart-source.txt-right.txt-muted.txt-cond!= chart.source
      //- .chart-notes.txt-right.txt-muted.txt-cond!= chart.notes
      
      //- .tooltip

block append css
  style
    :sass
    
      .wrapper
        height: 550px

      .chart
        box-sizing: border-box
        position: relative

      .chart-content
        position: absolute
        top: 20px
        left: 65px
        right: 20px
        bottom: 40px

      .chart-content > svg
        border-bottom: 1px solid #bbb

      .chart-title
        margin: auto
        font-size: 20px
        
      .chart-subtitle
        font-weight: 600
        height: 10px
        margin-top: -10px
        font-size: 15px
        
      .tooltip
        position: absolute
        left: 0
        background: #fffe
        padding: .75em
        opacity: 0
        border-radius: .2em
        box-shadow: 0 0 5px 0 #0004
        transition-duration: 0.5s
        pointer-events: none
        font-size: 14px
        text-transform: lowercase
        max-width: 180px
        box-sizing: border-box
        
      .y-label
        transform: rotate(-90deg) translate(-1.5rem, -3rem)

      li
        list-style: none
        margin: 0
        padding: 4px 16px 4px 24px

      .legend
        font-size: 15px
        margin-bottom: .75em
        margin-top: 12px

      .legend-item
        margin: 4px 8px 0
        padding-right: 0
        position: relative
        white-space: nowrap

      .legend-item-box
        position: absolute
        left: 0
        top: .5em
        height: 1em
        width: 1em
        background: black

      polyline
        vector-effect: non-scaling-stroke

      text
        font-size: 14px
        fill: currentColor

      svg
        overflow: visible
        
      .chart-notes, .chart-source
        margin-left: 2em
        font-size: 15px
        
      .chart-value
        opacity: 0
        transition-duration: .4s
        pointer-events: none
        
      circle
        opacity: 0
        transition-duration: .4s
        
      .gridlines
        transition-duration: .4s
      
      .chart-content:hover .gridlines
        opacity: 0

      .chart-content:hover .chart-value,
      .chart-content:hover circle,
        opacity: 0


      .flex-ch
        flex-direction: row-reverse

      @media (max-width: 700px)
        
        .x-label text
          text-anchor: end
          transform: rotate(-45deg) translate(-8px, 14px)

        text
          font-size: 13px
          
      @media (max-width: 500px)
        .chart-content
          bottom: 40px
        .legend
          flex-direction: column
        .chart-title
          font-size: 18px
        .chart-subtitle
          font-size: 14px
        .chart-notes,
        .chart-source
          text-align: center
          font-size: 13px
          
      @media print
        .wrapper
          margin: 100px auto!important
