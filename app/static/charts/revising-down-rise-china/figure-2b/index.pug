extend /partials/layout

block append config
  - var datapath = "static/charts/revising-down-rise-china/figure-2b/data"
  - _.extend(page, data.getOne(datapath))
  - toPercent = (n) => (n * 100).toFixed(2) + "%"

block page
  .wrapper.flex.flex-col
    .page-title.txt-center= page.title 
    .col-wrap.txt-center.flex-grow.flex.txt-sm
      .col-md.flex-grow.flex.flex-col
        - chart = page.charts[0]
        .chart-title= chart.title
        .chart-subtitle.txt-muted.txt-tu= chart.subtitle 

        .chart.flex-grow: .chart-content

          - scale = chart.scale
          - minY = scale.minY
          - maxY = scale.maxY
          - range = maxY - minY
          - baseline = (scale.datum + maxY) / range

          //- I've split fy (y position of the rect) and fh (height of the rect) into two equations. Positive and negative values need to be treated differently, hence the ternary statement in fy()
          - fh = (y) => Math.abs(y) / range
          - fy = (y) => y < 0 ? baseline : (baseline - fh(y))
          - fx = (i) => (i + 0.6) / (chart.axes[1].values.length + 0.6)

          svg(height="100%" width="100%")
            svg(height="100%")
              //- This must have been an older template as the number of steps on the y-axis was hard-coded in multiple places. I've replaced those hard-coded values with a new variable "scale.steps", which I've defined in data.yaml
              for n, i in new Array(scale.steps)
                - y = 1 - (i / (scale.steps - 1))
                svg(y=toPercent(y))
                  text(text-anchor="end" transform="translate(-8 4)")
                    = scale.minY + (i / (scale.steps - 1)) * (scale.maxY - scale.minY) + "%"
                     
            g
              for y, i in chart.axes[1].values
                - label = chart.axes[0].values[i]
                svg(
                  x=toPercent(fx(i))
                  y=toPercent(fy(y))
                  width=toPercent(fx(0))
                  height=toPercent(fh(y))
                )
                  rect(
                    fill=label.highlight ? "#ff4050" : "#539ed4"
                    width="100%"
                    height="100%"
                  )

                  text.chart-value(
                    x="50%"
                    y=-8
                    text-anchor="middle"
                  )
                    = y + "%"

                  svg(x="50%" y="100%")
                    text(
                      text-anchor="end"
                      transform="translate(18 18)"
                    )

                //- Add a new baseline
                line(x1="0" x2="100%" y1=toPercent(baseline) y2=toPercent(baseline) stroke="#ccc")

    .chart-source.txt-muted.txt-center
      != page.source

block append css
  style
    :sass
      .page-title
        /* margin-bottom: 25px */

      .wrapper
        height: 500px
        max-width: 700px

      .col-wrap
        margin: 0

      .col-md
        padding: 0 1em
        width: 50%

      .chart
        position: relative

      .chart-content
        position: absolute
        top: 20px
        left: 36px
        right: 12px
        bottom: 24px

      .chart-content > svg
        height: 20px
        min-height: 100%

      .chart-title,
      .chart-subtitle
        padding: 0 24px

      .chart-title
        // max-width: 320px
        margin: 0 auto 
        font-size: 20px

      .chart-subtitle
        height: 0
        margin: 0 0 50px 0
        font-size: 15px

      .chart-source
        font-size: 14px
        max-width: 800px
        margin: 12px 8px 0

      .chart-value
        //- opacity: 0
        transition: opacity 300ms

      text
        font-size: 14px
        fill: currentColor

      svg
        overflow: visible

      @media screen and (max-width: 600px)
        .col-wrap
          display: block
        .col-md
          width: 100%
          height: 100%
