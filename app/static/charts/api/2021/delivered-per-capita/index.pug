extend /partials/layout

block append config
  - var datapath = "static/charts/api/2021/delivered-per-capita/data"
  - var datapath2 = "static/charts/api/2021/total-delivered/data"
  - var colorpath = "static/charts/templates/colors/data"
  - capita = data.getOne(datapath)
  - total = data.getOne(datapath2)
  - _.extend(page, data.getOne(colorpath))
  - toPercent = (n) => (n * 100).toFixed(2) + "%"
  - MILLION = 1000000
  
block page
  .wrapper.flex-col.txt-center
    .chart-title COVID-19 vaccine doses delivered in the&nbsp;region
    //- .flex.flex-row
    //-   for chart, index in [total, capita]
    .flex.flex-1.flex-swap
      for chart, index in [total, capita]
        .flex-col.flex-1
          .chart-subtitle!= `${chart.subtitle.trim()}<br>Top 5 countries`
          .chart.flex-grow: .chart-content
            - ln = chart.series[0].values.length
            - axes = chart.axes
            - minX = axes.minX
            - maxX = axes.maxX
            - range = maxX - minX
            - fx = (x) => (x - minX) / range
            - fy = (i) => (i + 0.6) / ln
            
            svg(height="100%" width="100%")
            
              // X-Axis labels
              svg(width="100%" y="100%")
                - let steps = axes.stepsX-1
                for n, i in new Array(steps+1)
                  - x = i / (steps)
                  svg.x-label(x=toPercent(x))
                    text(text-anchor="middle" transform="translate(0 18)")
                      = ((minX + range*(i/steps)) / (!index ? MILLION : 1)).toFixed(!index ? 0 : 1) + (!index ? "M" : "")
                    
              // X-Axis minor lines
              if axes.minorLines
                svg(width="100%")
                  for n, i in new Array(steps+1)
                    - x = (i / steps)
                    svg
                      line(
                        x1=toPercent(x)
                        y1="0%"
                        x2=toPercent(x)
                        y2="100%"
                        stroke="#ffffff20"
                        stroke-dasharray=(axes.dotted.includes(steps-i) ? 5 : "")
                      )

              // Chart rects
              g.bars
                - const n = chart.series[0].values.length
                for undef, i in new Array(n)
                  svg(
                    y=toPercent(fy(i)-fy(-0.15) )
                    height=toPercent(fy(0))
                    width="100%"
                  )   
                    - vals = chart.series.filter( (s, i) => i ).map( s => s.values[i] )
                    - vals = axes.reverse ? vals.reverse() : vals
                    - x0 = 0

                    for v, j in vals
                      - ci = axes.reverse ? vals.length-j : j+1

                      if v > 0
                        rect(
                          x=toPercent(x0)
                          width=toPercent(fx(v))
                          height="100%"
                          fill=(i === 0 ? "#f80" : page.colors[chart.series[ci].color])
                        )
                        text.chart-value(
                          x=toPercent(x0 + fx(v + (!index ? MILLION : .005) ))
                          y="50%"
                          text-anchor="start"
                          transform="translate(2 4.5)"
                          style=`color: ${(i === 0 ? "#f80" : page.colors[chart.series[ci].color])}`
                        )
                          = (v / (!index ? MILLION : 1)).toFixed(2) + (!index ? "M" : "")

                      - x0 += fx(v)
                        
                    // Y-Axis labels
                    svg.y-label(x="0%" y="50%")
                      text(
                        text-anchor="end"
                        transform="translate(-16, 5)"
                      )
                        =chart.series[0].values[i]
                        
                line(x1=0 x2=0 y1=0 y2="100%" stroke="#f80" stroke-width="2")

    .chart-source!= [capita.notes,capita.source].join("<br>")

block append css
  style
    :sass
      .wrapper
        box-sizing: border-box
        height: 400px
        max-width: 700px
        padding: 2rem 1rem
        background: #31363B
        color: white

      .chart
        box-sizing: border-box
        position: relative

      .chart-content
        position: absolute
        top: 10px
        left: 100px
        right: 40px
        bottom: 60px

      .chart-title
        font-size: 22px
        text-transform: uppercase
        margin-bottom: .75rem
        
      .chart-subtitle
        font-weight: 300
        font-size: 14px
        margin: .5rem 0
        font-style: italic
        color: rgba(white, 0.8)
        margin-left: 100px
        text-align: left
        line-height: 1.3

      text
        font-size: 12px
        fill: currentColor

      .chart-value,
      .x-label text
        font-size: 10px

      svg
        overflow: visible
        
      .chart-source
        margin-top: 1rem 
        color: rgba(white, 0.7)
        a
          color: white 
          text-decoration: none

        
      .chart-source,
      .chart-notes
        font-size: 12px
          
      @media (max-width: 600px)
        .wrapper 
          padding: 2rem 0.5rem
        .chart-title 
          font-size: 16px
        .chart-subtitle
          line-height: 1.1
          margin-left: 0
          text-align: center
          margin-top: 0
          font-size: 12px

        .flex-col:nth-child(2)
          .chart-subtitle
            margin-top: 1rem
          .chart-content 
            bottom: 14px

        .chart-content
          top: 0px 
          bottom: 20px
        .flex-swap 
          flex-direction: column

        text 
          font-size: 10px

        .chart-value,
        .x-label text
          font-size: 9px
      

