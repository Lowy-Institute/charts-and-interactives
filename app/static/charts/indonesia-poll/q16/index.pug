extend /partials/layout

block append config
  - var datapath = "static/charts/indonesia-poll/q16/data"
  - var colorpath = "static/charts/templates/colors/data"
  - _.extend(page, data.getOne(datapath))
  - _.extend(page, data.getOne(colorpath))
  - toPercent = (n) => (n * 100).toFixed(2) + "%"
  - chart = page
  
block page
  .wrapper.flex
    .txt-left.flex.flex-grow.flex-col
      .chart-title= chart.title
      .chart-subtitle.p-sm!= chart.subtitle
      hr
      .chart.flex-grow: .chart-content
        - ln = chart.series[0].values.length
        - axes = chart.axes
        - minX = axes.minX
        - maxX = axes.maxX
        - range = maxX - minX
        - fx = (x) => (x - minX) / range
        - fy = (i) => (i + 0.7) / ln
        
        .chart-container(height="100%" width="100%")

          // Chart rects
          .bars
            - const n = chart.series[0].values.length
            
              for undef, i in new Array(n)
                // Y-Axis labels
                .y-label.flex-wrap.flex-ch
                  .bar-label
                    p
                      = chart.series[0].values[i]

                  .bar-content
                    svg(
                      y=toPercent(fy(i)-fy(-0.15) )
                      width="100%" 
                      height="20px"
                    )   
                      - vals = chart.series.filter( (s, i) => i ).map( s => s.values[i] )
                      - vals = axes.reverse ? vals.reverse() : vals
                      - x0 = 0

                      for v, j in vals
                        - ci = axes.reverse ? vals.length-j : j+1

                        if v > 0
                          rect(
                            x=toPercent(x0)
                            width=toPercent(fx(v))
                            height=toPercent(fy(16))
                            fill=chart.colors[chart.series[ci].color]
                            data-value=v
                            data-c=i
                            data-s=j
                            data-category=chart.series[0].values[i]
                            data-response=chart.series[j+1].title
                            data-tooltip
                          )
                          text.chart-value(
                            x=toPercent(x0 + fx(v/2))
                            y="12%"
                            text-anchor="middle"
                            transform="translate(0 12)"
                            style=`color: ${(j != 3 ? "white" : "")}`
                          )
                            //-= v.toFixed(0) + (axes.percentage ? "%" : "")
                            //- removed % symbol from hover
                            = v.toFixed(0) + (axes.percentage ? "" : "")

                        - x0 += fx(v)
                      
          .axis-container
            .axis-spacer
            .axis
              // X-Axis labels
              svg.x-axis(width="100%" y="100%" height="16px")
                - let steps = chart.axes.stepsX-1
                for n, i in new Array(steps+1)
                  - x = i / (steps)
                  svg.x-label(x=toPercent(x))
                    text(text-anchor="middle" transform="translate(0 18)")
                      = (minX + range*(i/steps)).toFixed(0) + (axes.percentage ? "%" : "")

              // X-Axis minor lines
              if chart.axes.minorLines
                svg.x-minor(width="100%" height="16px")
                  for n, i in new Array(steps+1)
                    - x = (i / steps)
                    svg
                      line(
                        x1=toPercent(x)
                        y1="0%"
                        x2=toPercent(x)
                        y2="100%"
                        stroke="#5552"
                        stroke-dasharray=(chart.axes.dotted.includes(steps-i) ? 5 : "")
                      )   
      
      .row
        ul.legend.txt-left.flex.flex-ch.flex-wrap
          for ax, i in new Array(chart.series.length)
            if i
              li.legend-item
                span.legend-item-box(style=`background: ${chart.colors[chart.series[i].color]}`)
                span.legend-item-label= chart.series[i].title

      .chart-source.txt-center.txt-muted.txt-cond!= chart.source
        span.chart-notes!= chart.notes
      
      .tooltip

  script(src="../tooltip.js")
  script.

    const phrase = "{{value}}% {{variant}}."
    const variant = (response) =>
      response === "Not an important threat at all"
        ? "said they didn't see {{category}} as an important threat to Indonesia's vital interests at all"
        : response === "Donâ€™t know"
        ? "said they didn't know"
        : response === "Refused to answer"
        ? "refused to answer"
        : "said they saw {{category}} as a {{response}} to Indonesia's vital interests"
    
  
block append css
  style
    include:sass ../_tooltip.sass
    :sass
  
      .wrapper
        height: 750px

      .chart
        box-sizing: border-box
        position: relative

      .chart-content
        position: absolute
        top: 0
        left: 10px
        right: 20px
        bottom: 30px

      .chart-title
        font-size: 24px
        padding-left: 1rem
        
      .chart-subtitle
        margin-top: -12px
        font-size: 16px

      li
        list-style: none
        margin: 0
        padding: 4px 16px 4px 24px

      .legend
        font-size: 15px
        margin: 8px 0

      .legend-item
        margin: 4px 8px
        padding-right: 0
        position: relative
        white-space: nowrap

      .legend-item-box
        position: absolute
        left: 0
        top: .5em
        height: 1em
        width: 1em
        background: black

      text
        font-size: 14px
        fill: currentColor

      svg
        overflow: visible
        
      .chart-notes, .chart-source
        margin-left: 2em
        font-size: 15px
        
      .chart-value
        opacity: 0
        transition-duration: .4s
        pointer-events: none
      
      .chart-content:hover .chart-value
        opacity: 1

      hr
        margin: 24px 0 16px

      .y-label
        clear: left
        min-height: 32px

      .axis-container
        width: 100%

      .bar-label,.axis-spacer
        font-size: 14px
        float: left
        width: 45%
        /* min-height: 32px
        text-align: right
        align-items: center

      .bar-label p
        padding: 0 1em

      .bar-content,.axis
        float: right
        width: 55%
          
      @media (max-width: 450px)
        .wrapper
          height: 800px

        @media (max-width: 450px)
          .wrapper
            height: 1060px
          text
            font-size: 13px
          .chart-content
            bottom: 20px
          .legend
            flex-wrap: wrap
          .legend-item
            margin: 0px 8px
          .chart-title
            font-size: 22px
          .chart-subtitle
            font-size: 14px
            height: 64px
          .chart-notes,
          .chart-source
            font-size: 13px

          .bar-label
            font-size: 14px
            float: left
            width: 100%
            min-height: 20px
            text-align: left

          .bar-label p
            padding: .4em 0 .2em 0

          .bar-content,.axis
            float: left
            width: 100%

          @media (max-width: 375px)
            .wrapper
              height: 1120px