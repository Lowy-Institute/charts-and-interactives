extend /partials/layout

block append config
  - var datapath = "static/charts/ocean-of-debt/figure-3/data"
  - _.extend(page, data.getOne(datapath))
  - toPercent = (n) => (n * 100).toFixed(2) + "%"

block page
  .wrapper.flex.flex-col.txt-center
    .page-title= page.title
    .col-wrap.flex-grow.flex.txt-sm
      .col-md.flex-grow.flex.flex-col
        - chart = page.charts[0]
        - scale = chart.scale
        - fx = (i) => (i + 0.5) / (chart.axes[1].values.length + 0.5)
        - fy = (y) => (y - scale.minY) / (scale.maxY - scale.minY)

        .chart-title= chart.title
        .chart-subtitle.txt-muted= chart.subtitle

        .chart.flex-grow: .chart-content
          svg(height="100%" width="100%")
            svg(height="100%")
              for n, i in new Array(7)
                - y = 1 - (i / 6)
                svg(y=toPercent(y))
                  text(text-anchor="end" transform="translate(-8 4)")
                    = scale.minY + (i/6) * (scale.maxY - scale.minY)

            g
              for vals, i in chart.axes[1].values
                svg(
                  x=toPercent(fx(i))
                  width=toPercent(fx(0))
                  height="100%"
                )
                  - y = 0
                  for val, i in vals.reverse()
                    if val
                      rect(
                        width="100%"
                        height=toPercent(fy(val))
                        y=toPercent(y)
                        fill=chart.colors[vals.length - i - 1]
                      )
                      text.chart-value(
                        x="50%"
                        y=toPercent(y + fy(val / 2))
                        text-anchor="middle"
                        transform="translate(0 4.5)"
                        class=(i >= 3 || i == 1 ? "txt-fff" : "")
                      )
                        = val.toFixed(0)

                    - y += fy(val)

                  text(
                    y="100%"
                    x="50%"
                    transform="translate(0 20)"
                    text-anchor="middle"
                  )
                    = chart.axes[0].values[i]

        ul.legend.txt-nowrap.flex-wrap.list-bare.txt-left.flex.flex-ch
          for item, i in chart.legend
            li.legend-item
              span.legend-item-box(style=`background:${chart.colors[i]}`)
              span.legend-item-label!= item

      .col-md.flex-grow.flex.flex-col
        - chart = page.charts[1]
        - scale = chart.scale
        - fx = (i, len) => (i + 0.75) / (len + 0.5)
        - fy = (y) => (y - scale.minY) / (scale.maxY - scale.minY)

        .chart-title= chart.title
          .txt-muted!= chart.subtitle

        .chart.flex-grow: .chart-content
          svg(height="100%" width="100%")
            svg(height="100%")
              for n, i in new Array(6)
                - y = 1 - (i / 5)
                svg(y=toPercent(y))
                  text(text-anchor="end" transform="translate(-8 4)")
                    = scale.minY + (i/5) * (scale.maxY - scale.minY)

            svg(width="100%" y="100%")
              for year, i in chart.axes[0].values
                svg(x=toPercent(fx(i, chart.axes[1].values.length)))
                  text(
                    text-anchor="middle"
                    transform="translate(0 20)"
                  )
                    = year

            svg(
              width="100%"
              height="100%"
              viewBox="0 0 100 100"
              preserveAspectRatio="none"
            )
              for item, i in chart.legend
                polyline(
                  fill="none"
                  stroke=chart.colors[i]
                  points=(chart.axes[1].values.map((y, ix, a) => (
                    [
                      100 * fx(ix, a.length),
                      100 * fy(scale.maxY - y[i])
                    ].join(" ")
                  ))).join(",")
                )

            for item, i in chart.legend
              g
                for val, ix in chart.axes[1].values
                  circle(
                    r=5
                    cx=toPercent(fx(ix, chart.axes[1].values.length))
                    cy=toPercent(fy(scale.maxY - val[i]))
                    fill=chart.colors[i]
                  )
                  svg(
                    x=toPercent(fx(ix, chart.axes[1].values.length))
                    y=toPercent(fy(scale.maxY - val[i]))
                  )
                    text.chart-value(
                      y=(val[i] == _.max(val) ? -12 : 24)
                      text-anchor="middle"
                      fill=chart.colors[i]
                    )
                      = val[i].toFixed(1)

        ul.legend.txt-nowrap.flex-wrap.list-bare.txt-left.flex.flex-ch
          for item, i in chart.legend
            li.legend-item
              span.legend-item-box(style=`background:${chart.colors[i]}`)
              span.legend-item-label!= item

    .chart-notes.txt-muted.txt-left
      !=page.notes

      .chart-source.txt-muted.txt-left
        !=page.source


block append css
  style
    :sass
      .wrapper
        height: 400px
        overflow: visible
        position: relative

      .page-title
        margin-bottom: 12px

      .col-wrap
        margin: 0 -1em

      .col-md
        padding: 0 1em
        width: 50%

      .chart
        box-sizing: border-box
        position: relative

      .chart-content
        position: absolute
        top: 20px
        left: 32px
        right: 12px
        bottom: 32px

      .chart-content > svg
        border-bottom: 1px solid #ccc

      .chart-title
        max-width: 320px
        margin: auto

      .legend
        font-size: 15px
        max-width: 320px
        margin: auto

      .legend-item
        margin: 4px 8px 0
        padding-left: 24px
        position: relative

      .legend-item-box
        position: absolute
        left: 0
        top: 4px
        height: 1em
        width: 1em
        background: black

      text
        font-size: 14px
        &:not([fill])
          fill: currentColor

      svg
        overflow: visible

      sup
        line-height: 0

      polyline
        vector-effect: non-scaling-stroke
        stroke-width: 4

      .chart-notes
        padding: 16px 20px 0
        font-size: 14px
        line-height: 1.2
        position: absolute
        top: 100%
        max-width: 800px

      .chart-source
        font-size: 14px
        max-width: 800px
        margin: 12px 0 0

      .chart-value
        opacity: 0
        transition: opacity 300ms

        &.txt-fff
          fill: #fff

        .chart:hover &
          opacity: 1

      @media screen and (max-width: 600px)
        .chart-notes
          padding-top: 0
        .col-wrap
          display: block
          height: 100%
        .col-md
          width: 100%
          height: 50%
          padding-bottom: 8px
