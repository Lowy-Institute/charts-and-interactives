- let dates = card.dates
- let events = card.content
- let n = dates.length
- let dotRadius = 6

.cardtype.txt-m Key Events
.history-wrap
  .btnfw(onclick=`scrollHistory(this, 1)`)
    <svg version="1.2" baseProfile="tiny" xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" class="h-btn"><path d="M8.586 5.586c-.781.781-.781 2.047 0 2.828l3.585 3.586-3.585 3.586c-.781.781-.781 2.047 0 2.828.39.391.902.586 1.414.586s1.024-.195 1.414-.586l6.415-6.414-6.415-6.414c-.78-.781-2.048-.781-2.828 0z"/></svg>
  .btnbw(onclick=`scrollHistory(this, 0)`)
    <svg version="1.2" baseProfile="tiny" xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" class="h-btn"><path d="M8.586 5.586c-.781.781-.781 2.047 0 2.828l3.585 3.586-3.585 3.586c-.781.781-.781 2.047 0 2.828.39.391.902.586 1.414.586s1.024-.195 1.414-.586l6.415-6.414-6.415-6.414c-.78-.781-2.048-.781-2.828 0z"/></svg>
  .skinny-scrollbar(style="overflow-x:scroll" onscroll="showHideHistoryBtns(this)")
    .history-timeline
      each event, i in events
        .node
          .event
            .event-text.txt-sm= event.description
            .event-title.txt-m= event.title
          .timeline
            .dot(style=`left: calc(50% - ${dotRadius}px)`)
              .dot.over
            if i == 0
              .line.line-start
            else if i==dates.length-1 
              .line.line-end
            else
              .line 
            .tl-date.txt-s= dates[i]
