extend /partials/layout

block append config
  - var datapath = "static/features/rules-based-order/charts/speeches-2/data"
  - _.extend(page, data.getOne(datapath))
  - toPercent = (n) => (n * 100).toFixed(2) + "%"

block page
  .wrapper.flex.flex-col.txt-center
    - chart = page.charts[0]
    - scale = chart.scale
    .page-title= chart.title
    .chart-subtitle.txt-muted!= chart.subtitle
    .flex-grow.flex.flex-col.txt-sm
      - fx = (i, len) => (i) / (len-1)
      - fy = (y) => (y - scale.minY) / (scale.maxY - scale.minY)

      .chart.flex-grow: .chart-content
        svg(height="100%" width="100%")
          svg(height="100%")
            for n, i in new Array(10)
              - y = 1 - (i / 9)
              svg(y=toPercent(y))
                text(text-anchor="end" transform="translate(-8 4)")
                  = scale.minY + (i/9) * (scale.maxY - scale.minY)
                  
              svg(width="100%" height="100%")
                  line(
                    x1="0" y1=toPercent(y) x2="100%" y2=toPercent(y)
                    stroke="#ddd"
                    stroke-width=.5
                  )

          svg(width="100%" y="100%")
            for year, i in chart.axes[0].values
              svg.x-label(x=toPercent(fx(i, chart.axes[0].values.length)))
                text(
                  text-anchor="end"
                  transform="rotate(-45) translate(-5 15)"
                )
                  = year
                  
          svg(width="100%" height="100%") 
            - let years = [2,3,2,3,2]
            - let range = _.sum(years)
            for name, i in ["Rudd", "Gillard", "Abbott", "Turnbull", "Morrison"]
              - let cumulativeYears = _.sum( years.map( (yrs,ii) => ii < i ? yrs : 0 ) ) + years[i]/2
              - let x = toPercent(cumulativeYears/range)
              svg(width="100%" height="100%")
                line(
                  x1=x y1="0" x2=x y2="100%"
                  stroke="#000"
                  stroke-width=1
                )
              svg(
                x=x
                y="50%"
                preserveAspectRatio="xMidYMid"
              )
                text(
                  text-anchor="middle"
                  transform="scale(3) rotate(-90) translate(0 4)"
                  fill="#4443"
                )
                  = name

          svg(
            width="100%"
            height="100%"
            viewBox="0 0 100 100"
            preserveAspectRatio="none"
          )
            for item, i in chart.legend
              polyline(
                fill="none"
                stroke=chart.colors[i]
                stroke-width="4"
                points=(chart.axes[1].values.map((y, ix, a) => (
                  [
                    100 * fx(ix, a.length),
                    100 * fy(scale.maxY - y)
                  ].join(" ")
                ))).join(",")
              )

          for item, i in chart.legend
            g
              for val, ix in chart.axes[1].values
                circle(
                  class=`c-${i}`
                  r=7
                  cx=toPercent(fx(ix, chart.axes[1].values.length))
                  cy=toPercent(fy(scale.maxY - val))
                  fill=chart.colors[i]
                  stroke="white"
                  stroke-width=3
                )
                svg(
                  x=toPercent(fx(ix, chart.axes[1].values.length))
                  y=toPercent(fy(scale.maxY - val))
                )
                  text.chart-value(
                    class=`series-${i}`
                    y=-12
                    x=( (ix==0 || ix==4 || ix==10 || ix==11) ? 5 : (ix==2 || ix==8 || ix==9) ? -5 : 0 )
                    text-anchor=( (ix==0 || ix==4 || ix==10 || ix==11) ? "start" : (ix==2 || ix==8 || ix==9) ? "end" : "middle" )
                    fill=chart.colors[i]
                  )
                    = val

      ul.legend.txt-nowrap.list-bare.txt-left.flex.flex-ch
        for item, i in chart.legend
          li.legend-item
            span.legend-item-label!= item
            span.legend-item-box(style=`background:${chart.colors[i]}`)
      
    .chart-notes.txt-muted.txt-right!= page.notes
    .chart-source.txt-muted.txt-right!= page.source

block append css
  style
    :sass
      .wrapper
        height: 580px
        overflow: visible
        position: relative

      .page-title
        font-size: 20px
        font-weight: 400
        margin-bottom: 12px

      .col-wrap
        margin: 0 -1em

      .col-md
        padding: 0 1em
        width: 50%

      .chart
        box-sizing: border-box
        position: relative

      .chart-content
        position: absolute
        top: 20px
        left: 50px
        right: 40px
        bottom: 60px

      .chart-content > svg
        border-bottom: 1px solid #ccc

      .legend
        font-size: 15px
        margin: auto

      .legend-item
        margin: 12px 12px 0
        padding-left: 24px
        position: relative

      .legend-item-box
        position: absolute
        left: 0
        top: 2px
        height: 1em
        width: 1em
        background: black

      text
        font-size: 14px
        &:not([fill])
          fill: currentColor

      svg
        overflow: visible
        
      sup
        line-height: 0

      polyline
        vector-effect: non-scaling-stroke
        
      circle, polyline
        transition-duration: 300ms

      .chart-notes
        font-size: 14px
        margin: 6px 10px 0
        line-height: 1.2

      .chart-source
        font-size: 14px
        margin: 4px 10px 0

      .chart-value
        opacity: 0
        transition: opacity 300ms
        
      .chart-content:hover .chart-value
        opacity: 1

      
      @media screen and (max-width: 600px)
        
        .x-label:nth-child(even)
          display: none
        .col-wrap
          display: block
          height: 100%
        .col-md
          width: 100%
          height: 50%
          padding-bottom: 8px
