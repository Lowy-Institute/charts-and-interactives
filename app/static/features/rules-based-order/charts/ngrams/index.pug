extend /partials/layout

block append config
  - var datapath = "static/features/rules-based-order/charts/ngrams/data"
  - _.extend(page, data.getOne(datapath))
  - toPercent = (n) => (n * 100).toFixed(2) + "%"

block page
  .wrapper.flex.flex-col.txt-center
    .page-title.txt-cond!= page.title
    .page-subtitle.txt-tu.txt-muted!= page.subtitle
    .col-wrap.flex-grow.flex.txt-sm
      .col-md.flex-grow.flex.flex-col
        - chart = page.charts[0]
        - inset = page.charts[1]
        - scale = chart.scale
        - fx = (i, len) => (i) / (len-1)
        - fy = (y) => (y - scale.minY) / (scale.maxY - scale.minY)

        .chart.flex-grow: .chart-content
          svg(height="100%" width="100%")
            svg(height="100%")
              for n, i in new Array(6)
                - y = 1 - (i / 5)
                svg(y=toPercent(y))
                  text(text-anchor="end" transform="translate(-8 4)")
                    = scale.minY + (i/5) * (scale.maxY - scale.minY) + "%"

            svg(width="100%" y="100%")
              for year, i in chart.axes[0].values
                svg(x=toPercent(fx(i, chart.axes[0].values.length)))
                  text(
                    text-anchor="end"
                    transform="rotate(-30) translate(-2 18)"
                  )
                    = year
                    
            svg(width="100%" height="100%")
              for n, i in new Array(6)
                - y = 1 - (i / 5)
                line(
                  x1="0" y1=toPercent(y) x2="100%" y2=toPercent(y)
                  stroke="#ddd"
                  stroke-width=.5
                )                    

            svg(
              width="100%"
              height="100%"
              viewBox="0 0 100 100"
              preserveAspectRatio="none"
            )
              for item, i in chart.legend
                polyline(
                  fill="none"
                  stroke=chart.colors[i]
                  stroke-linejoin="round"
                  stroke-linecap="round"
                  points=(chart.axes[1].values.map((y, ix, a) => (
                    [
                      100 * fx(ix, a.length),
                      100 * fy(scale.maxY - y[i])
                    ].join(" ")
                  ))).join(",")
                )

            // INSET
            - let len = chart.axes[1].values.length
            svg#lightbox(
              x=toPercent((len-17)/len)
              y=100*fy(scale.maxY - 1.3)+"%"
              width=100*fx(17, len)+"%"
              height=100*(fy(1.3) - fy(-0.1))+"%"
              viewBox="0 0 100 100"
              preserveAspectRatio="none"
            )
              rect(
                width=100
                height=100
                fill="transparent"
                stroke="black"
                stroke-width=.25
              )  
            
            svg#inset(
              x=toPercent((len-17)/len)
              y=toPercent(fy(scale.maxY - 9))
              width=toPercent(fx(17, len))
              height=toPercent(fy(8.5) - fy(2))
              viewBox="0 0 100 100"
              preserveAspectRatio="xMinYMax"
            )
          
              rect(
                x=-20
                y=-10
                width=135
                height=125
                fill="white"
                stroke="black"
                stroke-width=.25
              )
                            
              for item, i in inset.legend
                polyline(
                  fill="none"
                  stroke=chart.colors[i]
                  stroke-linejoin="round"
                  points=(inset.axes[1].values.map((y, ix, a) => 
                    y[i] == null ? "" : (
                    [
                      100 * fx(ix, a.length),
                      100 * fy(scale.maxY - 10*y[i])
                    ].join(" ")
                  ))).join(",")
                )
                
              svg(height="100")
                for n, i in new Array(6)
                  - y = 1 - (i / 5)
                  svg(y=toPercent(y))
                    line( x1="0" y1=y x2="100" y2=y stroke=(i ? "#0002" : "#0005") stroke-width=.25 stroke-dasharray=(i ? ".5" : "")) 
                    text(text-anchor="end" transform="translate(-3 1.75) scale(0.35)")
                      = (scale.minY + (i/5) * (scale.maxY - scale.minY))/10 + (i==0 ? "" : "%")
                  

              svg(width="100" y="100")
                for year, i in [1992, 2000, 2008]
                  svg(x=toPercent(fx(i, 3)))
                    text( text-anchor="middle" transform="translate(0 9) scale(0.35)" )
                      = year
                

            //for item, i in chart.legend
              svg(x="100%")
                - n = chart.axes[1].values.length - 3
                text(
                  y=toPercent(fy(scale.maxY - chart.axes[1].values[n][i] ))
                  class="label"
                  text-anchor="end"
                  transform="translate(0 -15)"
                  fill=chart.colors[i]
                )
                  = `"${item}"`



    //- .chart-notes.txt-muted.txt-left
      !=page.notes

      .chart-source.txt-muted.txt-left
        !=page.source


block append css
  style
    :sass
      .wrapper
        height: 550px
        overflow: visible
        position: relative

      .page-title
        font-size: 20px
        font-weight: 500
        
      .page-subtitle
        font-size: 13px
        font-weight: 600
        height: 0        
        margin-bottom: 26px

      .col-wrap
        margin: 0 -1em

      .col-md
        padding: 0 1em
        width: 50%

      .chart
        box-sizing: border-box
        position: relative

      .chart-content
        position: absolute
        top: 30px
        left: 40px
        right: 50px
        bottom: 40px

      .chart-content > svg
        border-bottom: 1px solid #ccc

      .chart-title
        margin: auto

      .legend
        font-size: 15px
        max-width: 320px
        margin: auto

      .legend-item
        margin: 4px 8px 0
        padding-left: 20px
        position: relative

      .legend-item-box
        position: absolute
        left: 0
        top: 9px
        height: 4px
        width: 1em
        background: black

      text
        font-size: 14px
        &:not([fill])
          fill: currentColor

      svg
        overflow: visible

      sup
        line-height: 0

      polyline
        vector-effect: non-scaling-stroke
        stroke-width: 4

      .chart-notes
        padding: 16px 20px 0
        font-size: 14px
        line-height: 1.2
        position: absolute
        top: 100%
        max-width: 800px

      .chart-source
        font-size: 14px
        max-width: 800px
        margin: 12px 0 0

      .label
        font-weight: 500
        font-size: 13px

      @media screen and (max-width: 650px)
        .label
          font-size: 12px
