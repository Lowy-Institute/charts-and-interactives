extend /partials/layout

block append config
  - var datapath = "static/features/rules-based-order/charts/ngrams/data"
  - _.extend(page, data.getOne(datapath))
  - toPercent = (n) => (n * 100).toFixed(2) + "%"

block page
  .wrapper.flex.flex-col.txt-center
    .page-title.txt-cond!= page.title
    .page-subtitle.txt-tu.txt-muted!= page.subtitle
    .col-wrap.flex-grow.flex.txt-sm
      .col-md.flex-grow.flex.flex-col
        - chart = page.charts[0]
        - inset = page.charts[1]
        - scale = chart.scale
        - fx = (i, len) => (i) / (len-1)
        - fy = (y) => (y - scale.minY) / (scale.maxY - scale.minY)

        .chart.flex-grow: .chart-content
          svg(height="100%" width="100%")
            svg(height="100%")
              for n, i in new Array(6)
                - y = 1 - (i / 5)
                svg(y=toPercent(y))
                  text(text-anchor="end" transform="translate(-8 4)")
                    = scale.minY + (i/5) * (scale.maxY - scale.minY) + "%"

            svg(width="100%" y="100%")
              for year, i in chart.axes[0].values
                svg(x=toPercent(fx(i, chart.axes[0].values.length)))
                  text(
                    text-anchor="end"
                    transform="rotate(-30) translate(-2 18)"
                  )
                    = year
                    
            svg(width="100%" height="100%")
              for n, i in new Array(6)
                - y = 1 - (i / 5)
                line(
                  x1="0" y1=toPercent(y) x2="100%" y2=toPercent(y)
                  stroke="#ddd"
                  stroke-width=.5
                )                    

            svg(
              width="100%"
              height="100%"
              viewBox="0 0 100 100"
              preserveAspectRatio="none"
            )
              for item, i in chart.legend
                polyline(
                  fill="none"
                  stroke=chart.colors[i]
                  stroke-linejoin="round"
                  stroke-linecap="round"
                  points=(chart.axes[1].values.map((y, ix, a) => (
                    [
                      100 * fx(ix, a.length),
                      100 * fy(scale.maxY - y[i])
                    ].join(" ")
                  ))).join(",")
                )

            // LIGHTBOX
            - let len = chart.axes[1].values.length
            svg#lightbox(
              x=toPercent((len-16)/len)
              y=100*fy(scale.maxY - 1.3)+"%"
              width=100*fx(16, len)+"%"
              height=100*(fy(1.3) - fy(-0.05))+"%"
              viewBox="0 0 100 100"
              preserveAspectRatio="none"
            )
              rect(
                width=100
                height=100
              )
              
            // ZOOM ICON
            svg.icon(
              version="1.2" baseProfile="tiny" xmlns="http://www.w3.org/2000/svg"
              width="24"
              height="24"
              viewBox="0 0 24 24"
              x=toPercent((len-9)/len)
              y=100*fy(scale.maxY - 1.25)+"%"
            )
              rect(
                width=25
                height=25
                fill="#002b45"
                rx=2
              )
              path(
                d="M13 11h-2v-2c0-.276-.224-.5-.5-.5s-.5.224-.5.5v2h-2c-.276 0-.5.224-.5.5s.224.5.5.5h2v2c0 .276.224.5.5.5s.5-.224.5-.5v-2h2c.276 0 .5-.224.5-.5s-.224-.5-.5-.5zM18.432 14.97l-.536-.537-.749-.75c.227-.688.354-1.42.354-2.183 0-3.859-3.141-7-7-7s-7 3.141-7 7 3.141 7 7 7c.763 0 1.496-.127 2.184-.354l.75.749 1.512 1.51.061.061.064.055c.601.506 1.348.784 2.104.784 1.726 0 3.13-1.404 3.13-3.131 0-.84-.328-1.628-.924-2.218l-.95-.986zm-12.932-3.47c0-2.757 2.243-5 5-5s5 2.243 5 5-2.243 5-5 5-5-2.243-5-5z"
              )
            
            // INSET
            svg#inset(
              x=toPercent((len-17)/len)
              y=toPercent(fy(scale.maxY - 9))
              width=toPercent(fx(17, len))
              height=toPercent(fy(8.5) - fy(2))
              viewBox="0 0 100 100"
              preserveAspectRatio="xMinYMax"
            )
            
              rect(
                x=-20
                y=-10
                width=135
                height=125
                fill="#f0f0f0"
                stroke="#0008"
                stroke-width=.25
              )

              for item, i in inset.legend
                polyline(
                  fill="none"
                  stroke=chart.colors[i]
                  stroke-linejoin="round"
                  points=(inset.axes[1].values.map((y, ix, a) => 
                    y[i] == null ? "" : (
                    [
                      100 * fx(ix, a.length),
                      100 * fy(scale.maxY - 10*y[i])
                    ].join(" ")
                  ))).join(",")
                )
                
              svg(height="100")
                for n, i in new Array(6)
                  - y = 1 - (i / 5)
                  svg(y=toPercent(y))
                    line( x1="0" y1=y x2="100" y2=y stroke=(i ? "#0002" : "#0005") stroke-width=.25 stroke-dasharray=(i ? ".5" : "")) 
                    text(text-anchor="end" transform="translate(-3 1.75) scale(0.35)")
                      = (scale.minY + (i/5) * (scale.maxY - scale.minY))/10 + (i==0 ? "" : "%")
                  

              svg(width="100" y="100")
                for year, i in [1992, 2000, 2008]
                  svg(x=toPercent(fx(i, 3)))
                    text( text-anchor="middle" transform="translate(0 9) scale(0.35)" )
                      = year
                      
              svg
                text(
                  y=80
                  x=80
                  text-anchor="start"
                  fill="#002b45"
                  transform="scale(0.38)"
                  font-weight="600"
                )
                  tspan "Rules-based
                  tspan(x=80 dy="1em") international order"

        ul.legend.txt-nowrap.flex-wrap.list-bare.txt-left.flex.flex-ch
          for item, i in chart.legend
            li.legend-item
              span.legend-item-box(style=`background:${chart.colors[i]}`)
              span.legend-item-label!= `"${item}"`

    .chart-source.txt-cond.txt-muted.txt-right
      != page.source

  script.
  
    const lightbox = document.querySelector("#lightbox");
    const inset = document.querySelector("#inset");
    const icon = document.querySelector(".icon path");
    
    function positionInset(screenSize) {
      w = screenSize == 'small' ? 65 : 36;
      x = screenSize == 'small' ? 90.5-w : 95.25-w;
      document.querySelector("#inset").setAttribute('width', w + "%");
      document.querySelector("#inset").setAttribute('x', x + "%");
    }
    
    function hoveron() {
      inset.style.opacity = 1;
      icon.setAttribute('stroke-width',"0");
      lightbox.style.fill = "#002b4522";
    }
    
    function hoveroff() {
      inset.style.opacity = 0;
      icon.setAttribute('stroke-width',"1");
      lightbox.style.fill = "transparent";
    }
    
    function update() {
      window.innerWidth < 550 ? positionInset('small') : positionInset('large');
    }
    
    function startup() {
      lightbox.addEventListener('mouseover', hoveron);
      /* lightbox.addEventListener('touchstart', hoveron); */
      lightbox.addEventListener('mouseout', hoveroff);
      /* lightbox.addEventListener('touchend', hoveroff); */
      update();
    }
    
    document.addEventListener('DOMContentLoaded', startup);
    window.onresize = update;


block append css
  style
    :sass
      .wrapper
        height: 560px
        overflow: hidden
        position: relative
        max-width: 720px

      .page-title
        font-size: 20px
        font-weight: 500
        
      .page-subtitle
        font-size: 13px
        font-weight: 600
        height: 0        
        margin-bottom: 26px

      .col-wrap
        margin: 0 -1em

      .col-md
        padding: 0 1em
        width: 50%

      .chart
        box-sizing: border-box
        position: relative

      .chart-content
        position: absolute
        top: 30px
        left: 40px
        right: 10px
        bottom: 50px

      .chart-content > svg
        border-bottom: 1px solid #ccc

      .chart-title
        margin: auto

      .legend
        font-size: 15px
        max-width: 80%
        margin: auto

      .legend-item
        margin: 4px 8px 0
        padding-left: 20px
        position: relative

      .legend-item-box
        position: absolute
        left: 0
        top: 9px
        height: 4px
        width: 1em
        background: black

      text
        font-size: 14px
        &:not([fill])
          fill: currentColor

      svg
        overflow: visible

      sup
        line-height: 0

      polyline
        vector-effect: non-scaling-stroke
        stroke-width: 4

      .chart-notes
        padding: 16px 20px 0
        font-size: 14px
        line-height: 1.2
        position: absolute
        top: 100%
        max-width: 800px

      .chart-source
        font-size: 14px
        max-width: 800px
        margin: 12px 0 0

      .label
        font-weight: 500
        font-size: 13px
        
      #lightbox
        fill: transparent
        transition-duration: .4s
        cursor: pointer
        user-select: none
        
        rect
          stroke: "#0007"
          stroke-width: 0.5px
        
      #inset
        fill: transparent
        opacity: 0
        transition-duration: .2s
        user-select: none
        
      .icon 
        pointer-events: none
        transition-duration: .2s
      
        path
          fill: #fff
          stroke: #002b45
