- toPercent = (n) => (n * 100).toFixed(2) + "%"
- toPoint = (p,i,n) => p ? [ +(i/(n-1)*100).toFixed(1), +(100-p).toFixed(1) ].join(",") : ""
- toPath  = a => a.map( (s,i) => !s ? "" : (!i || !a[i-1]) ? `M${toPoint(s,i,a.length)}` : `L${toPoint(s,i,a.length)}` ).filter( e => e != "" ).join(" ")

- countries = data.getOne("static/features/covid-performance/data/countries")
- list = _.filter(countries, c => c.rank)
- list = _.sortBy(list, 'rank')
- n = list.length

.slide-wrap
  
  - cat = "rankings"
  include _context

  .type-wrap(data-view="in-viewport")
    .table-wrapper.flex
      .flex-col
        .table-head: table
          thead
            tr
              th.txt-left(onclick="sortTable.call(this, \"rank\")") Rank
                span.icon.icon-down-sm.show
              th.txt-left(
                onclick="sortTable.call(this, \"name\")"
              ) 
                | Country
                span.hide-touchscreen /Territory
                span.icon.icon-down-sm
              th.txt-center(
                ) Average
                
        .country-list: table
          tbody
            each c, i in list
              tr(data-rank=c.rank data-name=c.shortname || c.name)
                td.txt-right= c.rank
                td.flex.items-center
                  img(
                    width="45px"
                    alt=`Country flag of ${c.name}`
                    src=`../../img/country-flags/png-100px/${c.code.toLowerCase()}.png`
                    loading="lazy"
                    )
                  .name!= c.shortname || c.name
                td.txt-right= c.average.toFixed(1)
                //- Removed sparkline  
                //- td.sparkline
                  svg(
                    viewBox="0 0 100 100" preserveAspectRatio="none"
                    xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink"
                  )
                    path( d=toPath(c.percentiles) )  
    
    p.footnote
      | * Please note:<br>
    
      | 1. China was not included in this ranking due to a lack of data on daily number of tests performed in the country for the entirety of the examined period. Data for Taiwan is provided separately to that of China. <br>

      | 2. Sweden’s composite score is based on the country’s management of the pandemic during the latter half of the examined period only. Due to incomplete data, Sweden’s ranking does not account for the country’s experience with the pandemic during the country’s first wave of COVID-19 infections.<br>

      | 3. Please see the Methodology section for further details on exclusions and inclusions.<br>

  script.
    var ready = false;
    
    function flipSortIcon(el) {
      let icon = el.querySelector('.icon');
      icon.classList.toggle('rot', !asc);

      if ( !icon.classList.contains('show') ) {
        el.parentNode.querySelector('th > .show').classList.remove('show');
        icon.classList.toggle('show');
      }
    }

    var asc  = true
    var sort = "rank"
    var tbody = document.querySelector('.country-list table tbody') 

    var list = Array.from(tbody.children).map((row) => ({
      html: row.outerHTML,
      rank: +row.dataset.rank,
      name: row.dataset.name.toLowerCase()
    }))
    
    function sortTable(key) {
      if (sort === key) asc = !asc

      list = list.sort((a, b) => 
        (a[key] < b[key] ? 1 : -1) * (asc ? -1 : 1)
      )

      tbody.innerHTML = list.map(row => row.html).join("")

      sort = key
      flipSortIcon(this)
    }
    window.addEventListener('load', function () {
      ready = true;
    });
    
