- scalex = [ 13, 252 ]
- scaley = [  0, 100 ]
- rangex = scalex[1] - scalex[0]
- rangey = scaley[1] - scaley[0]
- median = data.getOne(`static/features/covid-performance/data/median`).values

- toPoint = (p,i,n) => p ? [ (i/(n-1)*100).toFixed(2), 100-p ].join(",") : ""
- toPath  = a => a.map( (s,i) => !s ? "" : (!i || !a[i-1]) ? `M${toPoint(s,i,a.length)}` : `L${toPoint(s,i,a.length)}` ).filter( e => e != "" ).join(" ")
- isValid = a => (_.uniq(a)).length > 1

if cat
  - labels = data.getOne(`static/features/covid-performance/data/${cat}`).labels
  - values = data.getOne(`static/features/covid-performance/data/${cat}`).values
  - colors = data.getOne(`static/features/covid-performance/data/${cat}`).colors
  - averages = data.getOne(`static/features/covid-performance/data/${cat}`).averages
      
.chart-wrap
  
  .chart-body(data-view="in-viewport")
    
    svg(
      width="100%"
      height="100%"
      xmlns="http://www.w3.org/2000/svg"
      xmlns:xlink="http://www.w3.org/1999/xlink"
    )
      
      // X TICKS
      svg.x-ticks(width="100%" height="100%")
        for n, i in new Array(rangex)
          if ( ( i + 14 ) % 28 == 0 )
            - x = i / rangex * 100 + "%"
            g.fade-in(class=("delay-" + ~~(i * 3 / 40)))
              rect.fill-v(x=x width=2 y=0 height="100%")
              g
                text.fade.fill-fff(
                  x=x
                  y="100%"
                  text-anchor="middle"
                  transform="translate(0 18)"
                )
                  = ((scalex[0] + i + 1) / 7).toFixed(0)
                  
      // Y TICKS
      svg.y-ticks(width="100%" height="100%")
        - steps = 5
        for n, i in new Array(steps)
          - y = (i) / (steps-1) * 100 + "%"
          g.fade-in(class=("delay-" + i * 2))
            
            if i > 0 && i < steps-1
              rect.fill-h.fill-fff.fill-a(
                x=0
                y=y
                width="100%"
                height=2
              )

            g
              text.fade.fill-fff(
                x="100%"
                y=y
                text-anchor="start"
                transform="translate(14 7)"
              )
                | #{100 - (25 * i)}


    // MEDIAN LINE
    .absolute.inset-0
      svg.line-chart.fade-in.delay-16(
        width="100%"
        height="100%"  
        viewBox="0 0 100 100"
        preserveAspectRatio="none"  
        xmlns="http://www.w3.org/2000/svg"
        xmlns:xlink="http://www.w3.org/1999/xlink"
      )
        path.median-path( d=toPath(median) )
    
    .absolute.inset-0      
      svg.fade-in.delay-16(
        width="100%"
        height="100%"
      )
        text.median-text(x="100%" y="58.3%" text-anchor="start") median


    if cat
      .absolute.inset-0
        include _line
        
        
    
    .chart-labels
  
      .x.txt-mid.fade-in Weeks after 100th case
        svg.inline(width='100', height='10', xmlns='http://www.w3.org/2000/svg')
          path.fill-l2r(d='M.25 3.5l85.93-.02V-.07l13.8 5.5-13.53 4.55V6.76H.52L.25 3.5z')
          
      .y.txt-mid.fade-in.flex

        svg(width='100', height='10', xmlns='http://www.w3.org/2000/svg')
          path.fill-r2l(d='M 100 3.5 l -25 0 V -.07 l -13 5 13 5 V 6.76 H 100 z')
          text.fill-mid(x="55" y="82.5%" text-anchor="end") Better
          
        .ph-xs Score

        svg(width='100', height='10', xmlns='http://www.w3.org/2000/svg')
          path.fill-l2r(d='M 0 3.5 l 25 0 V -.07 l 13 5 -13 5 V 6.76 H 0 z')
          text.fill-mid(x="45" y="82.5%" text-anchor="start") Worse

    if cat == "region"
      include _countries
      svg#country-labels.inset-0(
        x="0" y="0"
        width="100%"
        height="100%"
        xmlns="http://www.w3.org/2000/svg"
        xmlns:xlink="http://www.w3.org/1999/xlink"
      )
        for c, i in countries
          if isValid(c.percentiles)
            
            - x = (100 * c.percentiles.findIndex( v => v != null) / c.percentiles.length) + "%"
            - y = (100 - c.percentiles.find( v => v != null )) + "%"
            
            text.country-line-label(
              x=x y=y
              text-anchor="end"
              fill="white"
              data-countrylabel=c.name
            )= c.name
