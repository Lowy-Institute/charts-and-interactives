- toPoint = (p,i,n) => p ? [ (i/(n-1)*100).toFixed(2), p ].join(",") : ""
- toPath  = a => a.map( (s,i) => !s ? "" : (!i || !a[i-1]) ? `M${toPoint(s,i,a.length)}` : `L${toPoint(s,i,a.length)}` ).filter( e => e != "" ).join(" ")
- isValid = a => (_.uniq(a)).length > 1

- countries = data.getOne("static/features/covid-performance/data/countries")

- scalex = [ 13, 209 ]
- scaley = [  0, 100 ]
- rangex = scalex[1] - scalex[0]
- rangey = scaley[1] - scaley[0]
      
#chart-wrap
  
  #chart-body
  
    include _scroller

    svg(
      width="100%"
      height="100%"
      xmlns="http://www.w3.org/2000/svg"
      xmlns:xlink="http://www.w3.org/1999/xlink"
    )
      defs
        linearGradient#fade-l2r(x1="0%" x2="100%" y1="0%" y2="0%")
          stop(offset="0%" stop-opacity=1 stop-color="#22273d")
          stop(offset="100%" stop-opacity=1 stop-color="#4c5162")
        linearGradient#fade-r2l(x1="0%" x2="100%" y1="0%" y2="0%")
          stop(offset="0%"   stop-opacity=1 stop-color="#4c5162")
          stop(offset="100%" stop-opacity=1 stop-color="#22273d")
        linearGradient#fade-h(x1="0%" x2="100%" y1="0%" y2="0%")
          stop(offset="0%" stop-opacity=1 stop-color="#22273d")
          stop(offset="50%" stop-opacity=1 stop-color="#4c5162")
          stop(offset="100%" stop-opacity=1 stop-color="#22273d")
        linearGradient#fade-v(x1="0%" x2="0%" y1="0%" y2="100%")
          stop(offset="0%" stop-opacity=1 stop-color="#22273d")
          stop(offset="50%" stop-opacity=1 stop-color="#4c5162")
          stop(offset="100%" stop-opacity=1 stop-color="#22273d")
        linearGradient#mask-l(x1="0%" x2="100%" y1="0%" y2="0%")
          stop(offset="0%" stop-opacity=1 stop-color="#22273d")
          stop(offset="100%" stop-opacity=0 stop-color="#22273d")
        linearGradient#mask-r(x1="0%" x2="100%" y1="0%" y2="0%")
          stop(offset="0%" stop-opacity=0 stop-color="#22273d")
          stop(offset="100%" stop-opacity=1 stop-color="#22273d")
        linearGradient#mask-t(x1="0%" x2="0%" y1="0%" y2="100%")
          stop(offset="0%" stop-opacity=1 stop-color="#22273d")
          stop(offset="100%" stop-opacity=0 stop-color="#22273d")
        linearGradient#mask-b(x1="0%" x2="0%" y1="0%" y2="100%")
          stop(offset="0%" stop-opacity=0 stop-color="#22273d")
          stop(offset="100%" stop-opacity=1 stop-color="#22273d")
        linearGradient#gradient
          stop(offset="0" stop-color="#d7d7e2")
          stop(offset="100%" stop-color="#d7d7e2" stop-opacity=0)
    
      // X TICKS
      svg(width="100%" height="100%")
        for n, i in new Array(rangex)
          if (i % 14 == 0 || i == rangex-1)
            - x = i / rangex * 100 + "%"
            g.fade-in(class=("delay-" + ~~(i * 3 / 40)))
              rect.fill-v(x=x width=2 y=0 height="100%")
              g
                rect.fill-dark(
                  x=x
                  y="100%"
                  transform="translate(-30 -16)"
                  width=60 height=32
                )
                text.fade.fill-fff(
                  x=x
                  y="100%"
                  text-anchor="middle"
                  transform="translate(0 7)"
                )
                  = ((scalex[0] + i + 1) / 7).toFixed(0)

        // Y TICKS
        - steps = 6
        for n, i in new Array(steps)
          if i > 0 && i < steps-1
            - y = (i) / (steps-1) * 100 + "%"
            g.fade-in(class=("delay-" + i * 2))
              rect.fill-h.fill-fff.fill-a(
                x=0
                y=y
                width="100%"
                height=2
              )

              g
                rect.fill-dark(
                  x="50%"
                  y=y
                  transform="translate(-40 -22)"
                  width=80 height=44
                )
                text.fade.fill-fff(
                  x="50%"
                  y=y
                  text-anchor="middle"
                  transform="translate(0 7)"
                )
                  | #{20 * i}%

      // COUNTRY LINES
      svg(
        x="0" y="0"
        width="100%"
        height="100%"
        viewBox="0 0 100 100"
        preserveAspectRatio="none"
      )
      
        for c, i in countries
          if isValid(c.rank)
            path.country-line.lite(
              data-name=c.name
              data-region=c.region
              data-politics=c.politics
              data-size=c.size
              data-income=c.income
              stroke-width=1
              d=toPath(c.rank)
            )

  #chart-labels
    
    .x.txt-mid.fade-in Weeks after 100th case
      svg.inline(width='100', height='10', xmlns='http://www.w3.org/2000/svg')
        path.fill-l2r(d='M.25 3.5l85.93-.02V-.07l13.8 5.5-13.53 4.55V6.76H.52L.25 3.5z')
        
    .y.txt-mid.fade-in.flex

      svg(width='100', height='10', xmlns='http://www.w3.org/2000/svg')
        path.fill-r2l(d='M 100 3.5 l -45 0 V -.07 l -13 5 13 5 V 6.76 H 100 z')
        text.fill-mid(x="32" y="82.5%" text-anchor="end") Better
        
      .ph-xs COVID performance

      svg(width='100', height='10', xmlns='http://www.w3.org/2000/svg')
        path.fill-l2r(d='M 0 3.5 l 45 0 V -.07 l 13 5 -13 5 V 6.76 H 0 z')
        text.fill-mid(x="68" y="82.5%" text-anchor="start") Worse
