- chart = data.getOne("static/features/chinas-communist-party-under-xi-jinping/data/gdp").series[2]

.slide.bg-dk
  .slide-inner(data-view="in-viewport")
    .type.txt-md.txt-ff.txt-left.posa(
      data-view="slide, in-viewport"
      data-duration=1800
    )
      span.line.bg-hl.txt-mono Australian exports by destination

    svg(
      width="100%"
      height="100%"
      viewBox="0 0 1080 520"
      data-view="line, in-viewport"
      data-duration=6000
      xmlns="http://www.w3.org/2000/svg"
      xmlns:xlink="http://www.w3.org/1999/xlink"
    )
      svg(width="100%" height="100%")
        - nb = (_.last(chart.scale) - chart.scale[0])
        for n, i in new Array(nb)
          if i > 0 && (chart.scale[0] + i) % 5 == 0
            - x = i / nb * 100 + "%"
            g.fade-in(class=("delay-" + ~~(i * 3 / 10)))
              rect.fill-v(x=x width=2 y=0 height="100%")
              g
                rect.fill-dk(
                  x=x
                  y="35%"
                  transform="translate(-24 -12)"
                  width=48 height=26
                )
                text.fade.fill-ff(
                  x=x
                  y="35%"
                  text-anchor="middle"
                  transform="translate(0 7)"
                )
                  = chart.scale[0] + i

        - nb = 6
        for n, i in new Array(nb)
          - y = (i + 1) / (nb + 1) * 100 + "%"
          g.fade-in(class=("delay-" + i * 2))
            rect.fill-h(
              x=0
              y=y
              width="100%"
              height=2
              _class=(i == nb - 1 ? "fill-ff fill-a" : "")
            )

            g
              rect.fill-dk(
                x="2.5%"
                y=y
                transform="translate(-24 -12)"
                width=48 height=24
              )
              text.fade.fill-ff(
                x="2.5%"
                y=y
                text-anchor="middle"
                transform="translate(0 7)"
              )
                | #{30 - i * (30/nb)}&thinsp;%

      svg.fade-in.delay-1(
        x="0"
        width="100%"
        height="100%"
        viewBox="0 0 100 100"
        preserveAspectRatio="none"
      )
        polyline.line(
          points="0,99.8076 100,99.8077" stroke="#fff" stroke-width=1
        )

      for country, i in chart.countries
        svg(opacity=0.5 + i / 6 * .5)
          svg(
            x="0"
            width="100%"
            height="100%"
            viewBox="0 0 100 100"
            preserveAspectRatio="none"
            opacity=0.5 + i / 6 * .5
          )
            polyline.fade-in.line(
              fill="none"
              stroke=country.code == "other" ? "#c6c9d0" : "#f7434c"
              stroke-width=4
              points=(
                country.values.map(
                  (e,i,a) => [
                    i / (a.length - 1) * 100,
                    100 - (e / .35)
                    ].map((e) => e.toFixed(2)).join(",")
                ).join(" ")
              )
            )

          g.fade-in(
            class=`delay-${country.dindex * 2}`
            transform="translate(" + ([
              country.dindex / (country.values.length - 1) * 1080 - country.width + 4,
              (100 - country.values[country.dindex] * 1/.35) * 5.20
              ].join(" ")
            ) + ")"

          )
            path(
              d="M-8,-12l" + country.width + ",0l8,12l-8,12l-" + country.width + ",0Z"
              fill=country.code == "other" ? "#c6c9d0" : "#f7434c"
            )
            text.txt-bold.txt-sans.txt-tu.fill-dk(
              x=0
              y=6
              text-anchor="start"
            )= country.name

    .posa.txt-muted.fade-in.delay-24(style="top: 0; right: 0")
      | Source: ABS, RBA
