- pttt = data.getOne("static/features/chinas-communist-party-under-xi-jinping/data/path-to-the-top")
- _toH = (r, i) => (_.pluck(r.slice(0,i),"height").reduce(((m,e)=>m+e),0)*20+16*i)

for person in pttt.people
  .slide.bg-lt.flex-stretch
    .flex-cv.page-0(
      data-view="in-viewport, page" 
      data-pages=person.roles.length
    )
      .posa.txt-tu.txt-bold.txt-sans.txt-xs.fade-in.delay-4
        svg(width="954" height="720")
          g
            for province, i in pttt.provinces
              use.fill-ff(
                href="#" + province.id
                stroke="#ebebed"
              )
          g
            for province, i in pttt.provinces
              text.fill-dka(
                x=province.x
                y=province.y + 4
                text-anchor="middle"
              )
                = province.name

          g(opacity=0.2)
            for where, i in _.pluck(person.roles, "where").reverse()
              - p = _.find(pttt.provinces, {name: where})
              if p
                g.build
                  if pv = _.find(pttt.provinces, {name: _.pluck(person.roles, "where").reverse()[i + 1]})
                    line(x1=pv.x x2=p.x y1=pv.y y2=p.y stroke="#22273d" stroke-width=4 stroke-linecap="round")
                  circle.fill-dk(
                    cx=p.x cy=p.y r=12 + (person.roles.length - 1 - i) * 4
                  )

          g
            - p = _.find(pttt.provinces, {name: _.pluck(person.roles, "where")[0]})
            circle.fill-dk.marker(
              r=12 cx=p.x cy=p.y
              data-attributes=JSON.stringify(
                person.roles.map((r,i) => ((p = _.find(pttt.provinces, {name: r.where})) ? {cx: p.x, cy: p.y, r: i*4 + 8} : {r: 0}))
              )
            )

          rect.item-0(
            width="100%"
            height="100%"
            fill="url(#gradient)"
          )

      .slide-inner(style="transform:translateZ(0)")
        .posa
          .clearfix
            .type.txt-md.txt-ff.fl-l(
              data-view="slide, in-viewport"
              data-duration=1000
            )
              span.line.txt-mono.bg-dk= person.name
            .type.txt-md.txt-ff.fl-l(
              data-view="slide, in-viewport"
              data-duration=700
              data-delay=100
            )
              span.line.txt-mono.bg-hl.txt-sc= person.nameCN

          img.item-0(src="./img/path-" + written.hyphenCase(person.name) + ".png" width=300)

      .slide-sub.bg-dk.ph-.txt-center(style="transform:translateZ(0)")
        .txt-md.ph-md
          .posr.fade-in.delay-3.fw(style="z-index: 1")
            for role, i in person.roles
              .posa.txt-mono.fw(class="item-"+i)
                .txt-hl= role.years
                .txt-ff.path-role(class=role.title.length >= 40 ? "txt-sm" : "")
                  != role.title

        .posa.bg-hl.path-roles(
            data-attributes=JSON.stringify(
              person.roles.map((r,i) => ({style: "transform: translateY(-" + _toH(person.roles, i) + "px)"}))
            )
          )
          .path-roles-mask(
            data-attributes=JSON.stringify(
              person.roles.map((r,i) => ({style: "transform: translateY(" + _toH(person.roles, i) + "px)"}))
            )
          )
            for role, i in _.clone(person.roles).reverse().slice(1)
              .txt-sans.txt-ff.txt-tu.txt-bold.ph-sm.pv-xs.build
                != role.title

style
  :sass
    .path-roles
      left: 0
      right: 0
      // height: 0
      padding: inherit
      top: calc(calc(50vh + 360px))
      padding-top: 0
      margin-top: -100px
      transition: all 600ms
      height: 100vh
      overflow: hidden
      line-height: 20px
      opacity: 0
      transform: translateY(0)

    .path-roles-mask
      transition: all 600ms
      bottom: 100%
      margin-bottom: -12px
      position: absolute
      padding-right: inherit
      .page-0 &
        opacity: 0
        transform: translateY(0)

    .build
      opacity: 0
      transition: all 600ms 300ms

    .marker
      transition: all 600ms
      opacity: 0.7
      animation: pulse infinite 1s alternate

    .page-1 .path-roles,
    .page-2 .path-roles,
    .page-3 .path-roles,
    .page-4 .path-roles,
    .page-5 .path-roles,
    .page-6 .path-roles,
    .page-7 .path-roles
      opacity: 1
    .page-1 .build:nth-child(n + 6),
    .page-2 .build:nth-child(n + 5),
    .page-3 .build:nth-child(n + 4),
    .page-4 .build:nth-child(n + 3),
    .page-5 .build:nth-child(n + 2),
    .page-6 .build:nth-child(n + 1),
      opacity: 1

    $list1: ".item"
    $list2: ".item"
    @for $i from 0 through 10
      $list1: "#{$list1}, .item-#{$i}"
      $list2: "#{$list2}, .page-#{$i} .item-#{$i}"

    #{$list1}
      opacity: 0
      transition: opacity 600ms
    #{$list2}
      opacity: 1
      transition-delay: 300ms

