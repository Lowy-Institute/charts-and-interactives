block append config
  -
    colors = data.getOne("static/charts/templates/colors/data").colors
    chart = data.getOne("static/features/indonesia-poll-2021/charts/q30/data")
    toPercent = (n) => (n * 100).toFixed(2) + "%"
  
#chart-30.chart-wrapper
  .txt-left.flex.flex-grow.flex-col
    .chart-title= chart.title
    .chart-subtitle.p-sm!= chart.subtitle
    hr
    .chart.flex-grow: .chart-content
      - ln = chart.series[0].values.length
      - axes = chart.axes
      - minX = axes.minX
      - maxX = axes.maxX
      - range = maxX - minX
      - fx = (x) => (x - minX) / range
      - fy = (i) => (i + 0.7) / ln
      
      svg(height="100%" width="100%")
      
        // X-Axis labels
        svg(width="100%" y="100%")
          - let steps = chart.axes.stepsX-1
          for n, i in new Array(steps+1)
            - x = i / (steps)
            svg.x-label(x=toPercent(x))
              text(text-anchor="middle" transform="translate(0 18)")
                = (minX + range*(i/steps)).toFixed(0) + (axes.percentage ? "%" : "")
              
        // X-Axis minor lines
        if chart.axes.minorLines
          svg(width="100%")
            for n, i in new Array(steps+1)
              - x = (i / steps)
              svg
                line(
                  x1=toPercent(x)
                  y1="0%"
                  x2=toPercent(x)
                  y2="100%"
                  stroke="#5552"
                  stroke-dasharray=(chart.axes.dotted.includes(steps-i) ? 5 : "")
                )

        // Chart rects
        g.bars
          - const n = chart.series[0].values.length
          for undef, i in new Array(n)
            svg(
              y=toPercent(fy(i)-fy(-0.15) )
              height=toPercent(fy(0))
              width="100%"
            )   
              - vals = chart.series.filter( (s, i) => i ).map( s => s.values[i] )
              - vals = axes.reverse ? vals.reverse() : vals
              - x0 = 0

              for v, j in vals
                - ci = axes.reverse ? vals.length-j : j+1

                if v > 0
                  rect(
                    x=toPercent(x0)
                    width=toPercent(fx(v))
                    height="100%"
                    fill=colors[chart.series[ci].color]
                    data-value=v
                    data-c=i
                    data-s=j
                    data-category=chart.series[0].values[i]
                    data-response=chart.series[j+1].title
                    data-tooltip=30
                  )
                  text.chart-value(
                    x=toPercent(x0 + fx(v/2))
                    y="50%"
                    text-anchor="middle"
                    transform="translate(0 4.5)"
                    style=`color: ${(j < 3 ? "white" : "")}`
                  )
                    = v.toFixed(0) + (axes.percentage ? "" : "")

                - x0 += fx(v)
                  
              // Y-Axis labels
              svg.y-label(x="0%" y="50%")
                text(
                  text-anchor="end"
                  transform="translate(-16, 5)"
                )
                  =chart.series[0].values[i]
    
    .row
      ul.legend.txt-left.flex.flex-ch.flex-wrap
        for ax, i in new Array(chart.series.length)
          if i
            li.legend-item
              span.legend-item-box(style=`background: ${colors[chart.series[i].color]}`)
              span.legend-item-label= chart.series[i].title

  style
    include:sass ./style.sass

  script.
    window.addEventListener("initCharts", () => {
      tooltip.phrases["30"] = {
        phrase: "{{value}}% {{variant}}.",
        variant: (response) =>
          response === ""
            ? "said they didn't know, or refused to answer"
            : "said they were {{response}} about the influence of {{category}} in Indonesia"
      }
    })