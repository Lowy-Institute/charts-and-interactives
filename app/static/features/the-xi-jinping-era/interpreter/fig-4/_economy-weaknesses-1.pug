- chartData = page.data.population

.wrapper.flex.bg-ff.txt-dk
  .slide-inner(data-view="in-viewport")
    .type.txt-md.txt-dk.txt-left.posa.z1(
      data-view="slide, in-viewport"
      data-duration=2000
    )
      //span.line.bg-hl Economic weaknesses
      span.bg-ff.txt-dk.txt-md Working-age population

    svg(
      width="90%" 
      height="80%"
      style="margin: 0 3rem"
      viewBox="0 0 100% 100%" 
      data-view="line, in-viewport"
      data-duration=5000
      xmlns="http://www.w3.org/2000/svg"
      xmlns:xlink="http://www.w3.org/1999/xlink"
    )
      defs
        linearGradient#fade-h(x1="0%" x2="100%" y1="0%" y2="0%")
          stop(offset="0%" stop-opacity=1 stop-color="#22273d")
          stop(offset="50%" stop-opacity=1 stop-color="#4c5162")
          stop(offset="100%" stop-opacity=1 stop-color="#22273d")
        linearGradient#fade-v(x1="0%" x2="0%" y1="0%" y2="100%")
          stop(offset="0%" stop-opacity=1 stop-color="#22273d")
          stop(offset="50%" stop-opacity=1 stop-color="#4c5162")
          stop(offset="100%" stop-opacity=1 stop-color="#22273d")
        linearGradient#mask-l(x1="0%" x2="100%" y1="0%" y2="0%")
          stop(offset="0%" stop-opacity=1 stop-color="#22273d")
          stop(offset="100%" stop-opacity=0 stop-color="#22273d")
        linearGradient#mask-r(x1="0%" x2="100%" y1="0%" y2="0%")
          stop(offset="0%" stop-opacity=0 stop-color="#22273d")
          stop(offset="100%" stop-opacity=1 stop-color="#22273d")
        linearGradient#mask-t(x1="0%" x2="0%" y1="0%" y2="100%")
          stop(offset="0%" stop-opacity=1 stop-color="#22273d")
          stop(offset="100%" stop-opacity=0 stop-color="#22273d")
        linearGradient#mask-b(x1="0%" x2="0%" y1="0%" y2="100%")
          stop(offset="0%" stop-opacity=0 stop-color="#22273d")
          stop(offset="100%" stop-opacity=1 stop-color="#22273d")
        linearGradient#gradient
          stop(offset="0" stop-color="#d7d7e2")
          stop(offset="100%" stop-color="#d7d7e2" stop-opacity=0)

      svg(width="100%" height="100%")
        - nb = (_.last(chartData.scale) - chartData.scale[0] + 1)
        for n, i in new Array(nb)
          if (chartData.scale[i]) % 10 == 0 && i > 0 && i < nb
            - x = i / nb * 100 + "%"
            g.fade-in(class=("delay-" + ~~(1 + i * 3 / 10)))
              if i > 0 && i < nb - 1
                rect(x=x width=1 y=0 height="100%" style="fill:#eee")
              g
                rect.fill-ff(
                  x=x y="103%" transform="translate(-24 0)" width=48 height=26
                )
                text.fade.fill-mid(
                  x=x y="103%"
                  text-anchor="middle"
                  transform="translate(0 14)"
                )
                  = chartData.scale[i]

        - nb = chartData.axes.y.length
        for v, i in chartData.axes.y
          - y = (i + 1) / (nb + 1) * 100 + "%"
          g.fade-in(class=("delay-" + ~~(3 * (i + 2))))
            rect(x=0 y=y height=1 width="100%" style="fill:#eee")
            g
              rect.fill-ff(x=0 y=y transform="translate(-24 -12)" width=48 height=24)
              text.fade.fill-lta(x=0 y=y text-anchor="end" transform="translate(0 7)")
                | #{v}&thinsp;B

        //rect(height="100%" width="100%" fill="url(#mask-t)")
        //rect(height="100%" width="100%" fill="url(#mask-r)")
        //rect(height="100%" width="100%" fill="url(#mask-l)")

      svg.fade-in.delay-1(
        width="100%"
        height="100%"
        viewBox="0 0 100 100"
        preserveAspectRatio="none"
      )
        -
          step = Math.abs(chartData.axes.y[0] - chartData.axes.y[1])
          ymax = Math.max(...chartData.axes.y) + step
          ymin = Math.min(...chartData.axes.y) - step
          scale = chartData.axes.scale || 1
          fy = v => (v !== null) ? 100 * (1 - ((v * scale) - ymin) / (ymax - ymin)) : null
          fx = (i,n) => 100 * i / (n - 1)
          fp = _a => _a.map((v,i,a) => [fx(i,a.length), fy(v)])
            .filter(a => a[1] !== null)
            .map(coords => coords.map((v) => v.toFixed(2)).join(","))
            .join(" ")

        for country, i in chartData.countries
          polyline.line(
            class=[country.class, country.dashed ? "dashed" : ""].join(" ")
            stroke-width=4
            points=fp(country.data)
          )

      svg
        for country, i in chartData.countries
          - w = country.name.length * 12 + (country.name.length > 6 ? 0 : 13)
          - origin = fp(country.data).split(" ")[0].split(",")
          svg.fade-in(
            x=(origin[0] + "%")
            y=(origin[1] + "%")
          )
            svg(x=(2 - w))
              path(
                class=["fill-hl", "fill-lt", "fill-dka", "fill-dka"][i]
                d="M-8,-12l" + w + ",0l8,12l-8,12l-" + w + ",0Z"
              )
              text.txt-bold.txt-sans.txt-tu.fill-ff(
                x=0
                y=6
                text-anchor="start"
              )= country.name

    .posa.txt-muted.fade-in.delay-24(style="bottom: 0; right: 0;")
      | Source: World Development Indicator, UNPD World Population Prospects 2022, Medium Variant
    
    .posa.bg-ff.txt-dk.txt-sm.txt-bld.txt-center.fade-in.border.delay-24.p-sm(
      style="top: 280px; left: 56%; transform: translateX(-50%); width: 400px; border: 1px solid #aeb3bc; opacity: .8;"
    )
      | 120&hairsp;m fewer workers by 2040

block append css
  style
    :sass
    
      body
        background: #fff
      .wrapper
        padding: 24px
      .slide-inner
        width: 100%