- MILLION = 1000000
- chartData = page.data.covid
- axis = chartData.axis
- scale = (Math.log(axis.max) - Math.log(axis.min))
- logw = (v) => (Math.log(v) - Math.log(axis.min)) / scale

.slide.bg-dk
  .slide-inner(data-view="in-viewport")
    .type.txt-lg.txt-ff.txt-left(
      data-view="slide, in-viewport"
      data-duration=1800
    )
      span.line.bg-hl.txt-mono!= chartData.title
      span.line.txt-md.txt-dk.bg-ff.txt-mono!= chartData.subtitle

    #covid-zero(style="margin: 6rem auto;")

      .txt-dk-mid.txt-sm.posr
        .bars(style={"margin-top": "0.5rem"})

          for value, i in chartData.values
            for v, j in value
              .bar.bar-border(
                class=j ? "" : "fw"
                style=j ? "" : "position: absolute; left: 0;"
              )
                .fw.fh(
                  data-view="bars, in-viewport"
                  data-duration=1200
                  data-delay=(j * 500 + i * 100)
                  data-value=(v < 0.5 * MILLION ? v : v < MILLION ? v / 1000 : v / MILLION)
                  data-precision=(v < MILLION ? 0 : 1)
                  data-suffix=(v < 0.5 * MILLION ? "" : v < MILLION ? "K" : "M")
                )
                  .bar-bg(
                    class=`bg-${chartData.legend[j].color}`
                    style=`width: ${100 * logw(v)}%`
                  )
                    .bar-value.bar-value-right(
                      class=j ? "txt-dk" : "txt-muted"
                    )= v

                  if j === 0
                    .bar-label.txt-right(
                      class=chartData.labels[i] == "China" ? "txt-ff" : ""
                    )= chartData.labels[i]

      .scale.fade-in.delay-8.txt-dk-mid(style="border-color: rgba(158,164,181);")
        for tick, i in new Array(10 * axis.ticks)
          
          - d0 = Math.log10(axis.min, 10) - 1
          - d = 1 + Math.floor(i / 10)
          - step = Math.pow(10, d0 + d)
          - v = step * (1 + i % 10)

          if i <= 50
            .scale-tick(
              style={
                "border-color": `rgba(158,164,181,${(1 - 0.1 * (i % 10))})`,
                "left": `${100 * logw(v)}%`,
                "position": `absolute`
              }
            )
              if i === 0
                .scale-tick-label(style="white-space: nowrap") Logarithmic scale
              else if i % 10 === 0
                .scale-tick-label
                  | 10
                  sup.txt-xs= d0 + d

    .txt-mid
      .scale-source.fade-in.delay-12 Source: John Hopkins University, as of October 14, 2022
      .legend.txt-right.delay-8.fade-in
        for key, i in chartData.legend
          .key
            .key-label= key.label
            .key-box(class=`bg-${key.color}`)