- chartData = page.data.regionalInvestment

.slide.bg-dk
  .slide-inner(data-view="in-viewport")
    .type.txt-lg.txt-ff.txt-left.posa.txt-mono.z1(
      data-view="slide, in-viewport"
      data-duration=1800
    )
      span.line.bg-hl Belt & Road
      span.line.bg-ff.txt-dk.txt-md Regional investment

    svg(
      width="100%"
      height="100%"
      style="margin: -.5rem 1rem 0"
      viewBox="0 0 1080 550" 
      data-view="line, in-viewport"
      data-duration=5000
      xmlns="http://www.w3.org/2000/svg"
      xmlns:xlink="http://www.w3.org/1999/xlink"
    )
      svg(width="100%" height="100%")
        - nb = (_.last(chartData.scale) - chartData.scale[0])
        for n, i in new Array(nb + 1)
          if (chartData.scale[i]) % 5 == 0
            - x = i / nb * 100 + "%"
            g.fade-in(class=("delay-" + ~~(1 + i * 3 / 10)))
              if i > 0 && i < nb
                rect.fill-ff(x=x width=1 y=0 height="100%")
              g
                rect.fill-dk(
                  x=x y="105%" transform="translate(-24 0)" width=48 height=26
                )
                text.fade.fill-ff(
                  x=x y="105%"
                  text-anchor="middle"
                  transform="translate(0 14)"
                )
                  = chartData.scale[i]

        - nb = chartData.axes.y.length
        for v, i in chartData.axes.y
          - y = (i + 1) / (nb + 1) * 100 + "%"
          g.fade-in(class=("delay-" + ~~(3 * (i + 1))))
            rect.fill-ff(x=0 y=y height=1 width="100%")
            g
              rect.fill-dk(x=0 y=y transform="translate(-24 -12)" width=48 height=24)
              if i
                text.fade.fill-ff(x=0 y=y text-anchor="end" transform="translate(0 7)")
                  | $#{v}&thinsp;B

        rect(height="100%" width="100%" fill="url(#mask-t)")
        rect(height="100%" width="100%" fill="url(#mask-r)")
        rect(height="100%" width="100%" fill="url(#mask-l)")

      svg.fade-in.delay-1(
        width="100%"
        height="100%"
        viewBox="0 0 100 100"
        preserveAspectRatio="none"
      )
        -
          step = Math.abs(chartData.axes.y[0] - chartData.axes.y[1])
          ymax = Math.max(...chartData.axes.y) + step
          ymin = Math.min(...chartData.axes.y) - step
          scale = chartData.axes.scale || 1
          fy = v => (v !== null) ? 100 * (1 - ((v * scale) - ymin) / (ymax - ymin)) : null
          fx = (i,n) => 100 * i / (n - 1)
          fp = _a => _a.map((v,i,a) => [fx(i,a.length), fy(v)])
            .filter(a => a[1] !== null)
            .map(coords => coords.map((v) => v.toFixed(2)).join(","))
            .join(" ")

        for country, i in chartData.countries
          polyline.line(
            class=[country.class, country.dashed ? "dashed" : ""].join(" ")
            stroke-width=4
            points=fp(country.data)
          )

      svg
        for country, i in chartData.countries
          - w = country.name.length * 12 + (country.name.length > 6 ? 0 : 13)
          - origin = fp(country.data).split(" ")[0].split(",")
          svg.fade-in(
            x=(origin[0] + "%")
            y=(origin[1] + "%")
          )
            svg(x=(2 - w))
              path(
                class=["fill-hl", "fill-lt", "fill-dka", "fill-dka"][i]
                d="M-8,-12l" + w + ",0l8,12l-8,12l-" + w + ",0Z"
              )
              text.txt-bold.txt-sans.txt-tu.fill-dk(
                x=0
                y=6
                text-anchor="start"
              )= country.name

    .posa.txt-muted.fade-in.delay-24(style="top: 0; right: 0")
      | Source: BU Overseas Finance, SAIS-CARI, Lowy Institute, CLAF